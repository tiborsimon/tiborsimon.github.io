<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Engineering with passion</title><link href="https://tiborsimon.io/" rel="alternate"></link><link href="https://tiborsimon.io/feeds/tibor-simon.atom.xml" rel="self"></link><id>https://tiborsimon.io/</id><updated>2016-07-15T00:00:00+02:00</updated><entry><title>Compiling Emacs on CentOS</title><link href="https://tiborsimon.io/blog/tools/compiling-emacs-on-centos/" rel="alternate"></link><updated>2016-07-15T00:00:00+02:00</updated><author><name>Tibor Simon</name></author><id>tag:tiborsimon.io,2016-07-15:blog/tools/compiling-emacs-on-centos/</id><summary type="html">&lt;p&gt;As I started to use Emacs as my primary text editor (I was a vimmer in the past), I noticed that my common config I created on my OSX machine for Emacs 24.5 doesn't work on one of my Vagrant based virtual machines running CentOS. If I tried to bring up the Helm buffer menu, it brings up an error that the &lt;em&gt;nesting exceeds `max-lisp-eval-depth'&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I figured out that the problem was that CentOS only has Emacs 23.1 available via yum, so I needed to compile it from the sources:&lt;/p&gt;
&lt;p&gt;First of all, I have downloaded the emacs repository mirror from GitHub, and I checked out to the &lt;code&gt;emacs-24.5&lt;/code&gt; tag:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone https://github.com/emacs-mirror/emacs.git
cd emacs
git checkout emacs-24.5
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then I run &lt;code&gt;autogen.sh&lt;/code&gt; which has created the &lt;code&gt;configure&lt;/code&gt; script.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;./autogen.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I run the created &lt;code&gt;configure&lt;/code&gt; script. As it could have been expected, there was some errors, so I installed the missing packages on demand:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;./configure
[error] no makeinfo
sudo yum install texinfo

./configure
[error] no x
sudo yum install libX11-devel

./configure
[error] no aw3d
sudo yum install Xaw3d-devel

./configure
[error] no libpng libjpg libgif/libungif libtiff
sudo yum install libjpeg-devel libpng-devel libungif-devel libtiff-devel

./configure
[error] no tputs
sudo yum install ncurses-devel

Where should the build process find the source code?    .
  What compiler should emacs be built with?               gcc -std=gnu99 -g3 -O2
  Should Emacs use the GNU version of malloc?             yes
      (Using Doug Lea&amp;#39;s new malloc from the GNU C Library.)
  Should Emacs use a relocating allocator for buffers?    no
  Should Emacs use mmap(2) for buffer allocation?         no
  What window system should Emacs use?                    x11
  What toolkit should Emacs use?                          LUCID
  Where do we find X Windows header files?                Standard dirs
  Where do we find X Windows libraries?                   Standard dirs
  Does Emacs use -lXaw3d?                                 yes
  Does Emacs use -lXpm?                                   yes
  Does Emacs use -ljpeg?                                  yes
  Does Emacs use -ltiff?                                  yes
  Does Emacs use a gif library?                           yes -lgif
  Does Emacs use a png library?                           yes -lpng15 -lz -lm
  Does Emacs use -lrsvg-2?                                no
  Does Emacs use imagemagick?                             no
  Does Emacs support sound?                               yes
  Does Emacs use -lgpm?                                   no
  Does Emacs use -ldbus?                                  no
  Does Emacs use -lgconf?                                 no
  Does Emacs use GSettings?                               no
  Does Emacs use a file notification library?             yes -lglibc (inotify)
  Does Emacs use access control lists?                    no
  Does Emacs use -lselinux?                               no
  Does Emacs use -lgnutls?                                no
  Does Emacs use -lxml2?                                  no
  Does Emacs use -lfreetype?                              no
  Does Emacs use -lm17n-flt?                              no
  Does Emacs use -lotf?                                   no
  Does Emacs use -lxft?                                   no
  Does Emacs directly use zlib?                           yes
  Does Emacs use toolkit scroll bars?                     yes
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally as the &lt;code&gt;configure&lt;/code&gt; script finished, I compiled the whole software package:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;make
sudo make install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After that, I had a fully functioning Emacs installation, that worked flawlesly with my configuration.&lt;/p&gt;
&lt;h1&gt;Summary&lt;/h1&gt;
&lt;p&gt;You can compile Emacs from sources with the following commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone https://github.com/emacs-mirror/emacs.git
cd emacs
git checkout emacs-24.5
sudo yum install texinfo libX11-devel Xaw3d-devel libjpeg-devel libpng-devel libungif-devel libtiff-devel ncurses-devel
./autogen.sh
./configure
make
sudo make install
&lt;/pre&gt;&lt;/div&gt;</summary><category term="centos"></category><category term="emacs"></category><category term="compile"></category><category term="make"></category><category term="configure"></category><category term="github"></category></entry><entry><title>Developing a python tool: Projects</title><link href="https://tiborsimon.io/blog/python/developing-a-python-tool-projects/" rel="alternate"></link><updated>2016-07-11T00:00:00+02:00</updated><author><name>Tibor Simon</name></author><id>tag:tiborsimon.io,2016-07-11:blog/python/developing-a-python-tool-projects/</id><summary type="html">&lt;h1&gt;Projects&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Projects&lt;/strong&gt; is a project management tool and recursive scripting engine, that &lt;/p&gt;
&lt;h1&gt;Why python?&lt;/h1&gt;
&lt;h1&gt;Setting up the development environment&lt;/h1&gt;
&lt;h1&gt;Distributing the project&lt;/h1&gt;</summary><category term="python"></category><category term="pip"></category><category term="projects"></category><category term="distribution"></category><category term="package"></category><category term="upload"></category><category term="projects"></category></entry><entry><title>My dotfile system</title><link href="https://tiborsimon.io/blog/tools/my-dotfile-system/" rel="alternate"></link><updated>2016-04-01T00:00:00+02:00</updated><author><name>Tibor Simon</name></author><id>tag:tiborsimon.io,2016-04-01:blog/tools/my-dotfile-system/</id><summary type="html">&lt;p&gt;Have you ever felt &lt;em&gt;crippled on a new machine&lt;/em&gt; you've just logged in for the first time? Tools missing, and if not, they have weird default configurations. Before you can start to work, you need to move in that machine: download all your needed tools, configure them one by one by hand. You quickly realize this is not the best way you can do..&lt;/p&gt;
&lt;div class="divider"&gt;Solution one&lt;/div&gt;

&lt;h1&gt;Externally saved configuration&lt;/h1&gt;
&lt;p&gt;You can speed up the initial configuration if you have a previously saved config file set in a machine independent storage, say Dropbox or a USB drive.&lt;/p&gt;
&lt;p&gt;These files are generally called &lt;strong&gt;dotfiles&lt;/strong&gt;, as command line tools often expect their configuration files to start with a dot indicating the file is hidden for normal use. Dotfiles are generally located in the current user's &lt;em&gt;home&lt;/em&gt; directory. When you start using a new machine, you simply  copy your saved config files to your home directory and you are home. &lt;/p&gt;
&lt;p&gt;Besides the custom configuration files, you can also save out a list of installable programs and tools that you want to have by default on a machine. Some package manager tools supports installing from files, but if not, you can write a small script that will install your tools one by one. You can create a &lt;code&gt;packages.txt&lt;/code&gt; file for this purpose:&lt;/p&gt;
&lt;div class="code-name"&gt;packages.txt&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;git
mc
vim
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;em&gt;one-by-one&lt;/em&gt; installer script could be something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;for app in &lt;/span&gt;&lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="err"&gt;cat&lt;/span&gt; &lt;span class="err"&gt;path/to/your/packages.txt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt;; do &lt;/span&gt;
&lt;span class="x"&gt;  echo &amp;quot;Installing &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;app&lt;/span&gt;&lt;span class="x"&gt;..&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;  if &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;YOUR_PACKAGE_MANAGER&lt;/span&gt;&lt;span class="x"&gt; install -y &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;app&lt;/span&gt;&lt;span class="x"&gt;&amp;gt;temp_log_file 2&amp;gt;&amp;amp;1; then&lt;/span&gt;
&lt;span class="x"&gt;    echo &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;app&lt;/span&gt;&lt;span class="x"&gt; installed.&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;  else&lt;/span&gt;
&lt;span class="x"&gt;    echo &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;app&lt;/span&gt;&lt;span class="x"&gt; installation failed! Error: \n&lt;/span&gt;&lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="err"&gt;cat&lt;/span&gt; &lt;span class="err"&gt;temp_log_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;  fi&lt;/span&gt;
&lt;span class="x"&gt;  rm -f temp_log_file&lt;/span&gt;
&lt;span class="x"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You might need to have administrator privileges to install packages on your machine. You have to replace the path to your &lt;em&gt;packages.txt&lt;/em&gt; file and your system's package manager.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;This method is semi-manual, as you have to copy the files, and run the commands yourself. It would be much more elegant if you would have a &lt;em&gt;one-command deployment&lt;/em&gt; solution. An another big drawback is the lack of version control (unless you have a local git repo on you USB drive). It is always a good idea to use versioning for &lt;strong&gt;anything&lt;/strong&gt; you do in you machine in case of an accident&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;div class="divider"&gt;Solution two&lt;/div&gt;

&lt;h1&gt;Hosted and versioned configuration&lt;/h1&gt;
&lt;p&gt;The next improvement step is to put your config files in a version control system, and host it on the internet. If you want a public configuration, you can't find better place than &lt;strong&gt;GitHub&lt;/strong&gt;. However, if you want your config to be in a private place, I can suggest using &lt;strong&gt;BitBucket&lt;/strong&gt;, as it offers free private repositories. Eihter versioning provider you choose, you will end up having an easy-to-deploy config system. You can clone your setup on a new machine, and you will have your setup ready to use.&lt;/p&gt;
&lt;p&gt;There is only one problem with this approach. If you clone your repository into your home directory, then your entire home directory will became a repository, but this is probably not what you want. You can solve this issue by cloning your repo into a separate directory, and then symlink your dotfiles into the expected place.&lt;/p&gt;
&lt;p&gt;This is the exact method I use for my dotfile system. I clone my dotfiles repository into the &lt;code&gt;~/.dotfiles&lt;/code&gt; directory, and then I run my deploy script, that will symlink the dotfiles one-by-one into their dedicated place. Then I only have to modify the dotfiles located in the &lt;code&gt;~/dotfiles&lt;/code&gt; directory, and my changes automatically appear in place.&lt;/p&gt;
&lt;p&gt;For deployment script, I use &lt;a href="https://github.com/holman/dotfiles"&gt;Zach Holman's dotfiles&lt;/a&gt; project that has a separated structure that I further customized to meet my needs.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Putting your dotfiles into a versioned repository and hosting it online gives you amazing flexibility. You can have your own configuration in any machine in minutes while keeping it on a dedicated place. You only need to clone your repository into a dedicated directory, and run your deployment script.&lt;/p&gt;
&lt;p&gt;How about one more improvement that will allow you to not just have your configuration on your new machine, but have your your configuration and identity with only a single command?&lt;/p&gt;
&lt;div class="divider"&gt;Final solution&lt;/div&gt;

&lt;h1&gt;Ultimate deployment&lt;/h1&gt;
&lt;p&gt;Since I have my custom domain name, I felt like there still more room for improvements. My final solution is for my machine independent setup is my &lt;strong&gt;deploy-over-url&lt;/strong&gt; dotfiles system that will:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;recognizes the current system (os x or linux)&lt;/li&gt;
&lt;li&gt;downloads my entire configuration via a specified protocol (https or ssh)&lt;/li&gt;
&lt;li&gt;creates a new ssh key if I need it&lt;/li&gt;
&lt;li&gt;uploads the created or existing ssh key to GitHub and BitBucket&lt;/li&gt;
&lt;li&gt;deploys my downloaded configuration files&lt;/li&gt;
&lt;li&gt;installs the necessary tools to ready to work&lt;/li&gt;
&lt;li&gt;and it does this through a convenient command line menu system&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All I have to do is type in the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;bash &amp;lt;(curl -fsSL tiborsimon.io/dotfiles)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I can choose what protocol do I want to use for downloading the configuration. If I choose &lt;strong&gt;https&lt;/strong&gt; the configuration will download instantly, and the ssh key generation will be skipped, since I only need my user name and password for GitHub to push back the config modification I will make later. If I choose &lt;strong&gt;ssh&lt;/strong&gt; for the download protocol, I will be prompted if to create a new ssh key, and optionally upload it ti GitHub or BitBucket. &lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;In this way I automated all of the critical stepts I do not want to repeate every time on a new machine.&lt;/p&gt;
&lt;p&gt;You can find detailed informations about my URL deployment and automated ssh key upload in my dedicated articles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tiborsimon.io/tools/dotfiles-with-url-deployment/"&gt;Dotfiles with URL deployment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tiborsimon.io/programming/upload-ssh-key-via-github-api/"&gt;Upload ssh key via Github API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to take a look at the system itself, you can go to my &lt;a href="https://github.com/tiborsimon/dotfiles"&gt;dotfiles GitHub repo&lt;/a&gt;.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Oh the irony.. Exactly after I typed this sentence my machine froze while traveling home on a bus.. :D Commit often, people! Espacially when you turned off swap file generation in vim :D&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="dotfiles"></category><category term="tools"></category><category term="script"></category><category term="linux"></category><category term="unix"></category></entry><entry><title>Dotfiles with URL deployment</title><link href="https://tiborsimon.io/blog/tools/dotfiles-with-url-deployment/" rel="alternate"></link><updated>2016-03-19T00:00:00+01:00</updated><author><name>Tibor Simon</name></author><id>tag:tiborsimon.io,2016-03-19:blog/tools/dotfiles-with-url-deployment/</id><summary type="html">&lt;p&gt;I started to improve my &lt;strong&gt;dotfiles&lt;/strong&gt; system with &lt;strong&gt;one command URL deployment&lt;/strong&gt;. In this way I can run a single command on a virgin system to deploy my configuration. This method works on OS X as well as any Linux system.&lt;/p&gt;
&lt;h2&gt;How does it work?&lt;/h2&gt;
&lt;p&gt;I use &lt;code&gt;curl&lt;/code&gt; to download the &lt;strong&gt;bootstrap&lt;/strong&gt; script which will prepare the machine to be able to clone my dotfiles repo, and then it runs the &lt;strong&gt;deploy&lt;/strong&gt; script.&lt;/p&gt;
&lt;p&gt;To download a script stored on &lt;strong&gt;GitHub&lt;/strong&gt; you can use the raw file listing. My &lt;strong&gt;bootstrap&lt;/strong&gt; script can be reached via the &lt;a href="https://raw.githubusercontent.com/tiborsimon/dotfiles/master/bootstrap" target="_blank"&gt;https://raw.githubusercontent.com/tiborsimon/dotfiles/master/bootstrap&lt;/a&gt; link. Notice, that this is not a convenient link to type..&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;curl https://raw.githubusercontent.com/tiborsimon/dotfiles/master/bootstrap
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I can take care of this problem by having a custom domain, and creating a redirect, I am using &lt;strong&gt;CloudFlare&lt;/strong&gt; as a nameserver and &lt;em&gt;ssl&lt;/em&gt; provider, so I can set up a custom &lt;strong&gt;Page Rule&lt;/strong&gt; to redirect the &lt;code&gt;tiborsimon.io/dotfiles&lt;/code&gt; to the raw script listing.&lt;/p&gt;
&lt;div class="gallery"&gt;
  &lt;img class="jslghtbx-thmb" src="/images/articles/dotfiles/custom-page-forward-rule.png" alt="CloudFlare custom Page Rule" data-jslghtbx data-jslghtbx-caption="CloudFlare custom Page Rule" data-jslghtbx-group="dotfiles-group-01" /&gt;
&lt;/div&gt;

&lt;p&gt;In this way, I can type:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;curl tiborsimon.io/dotfiles
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Downloading and executing the script&lt;/h2&gt;
&lt;p&gt;The script is available for execution. The next step is to use it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sh &amp;lt;(curl -fsSL tiborsimon.io/dotfiles)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can feed the raw sript to &lt;code&gt;sh&lt;/code&gt;, &lt;code&gt;bash&lt;/code&gt; or &lt;code&gt;zsh&lt;/code&gt;. Curl will download the script in a subshell, then it will return the downloaded script, which we will feed to the &lt;code&gt;sh&lt;/code&gt; in this example.&lt;/p&gt;
&lt;p&gt;The flags make sure, curl not corrupt the script during download:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; -f, --fail          Fail silently (no output at all) on HTTP errors (H)
 -s, --silent        Silent mode (don&amp;#39;t output anything)
 -S, --show-error    Show error. With -s, make curl show errors when they occur
 -L, --location      Follow redirects (H)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Make sure you have the latest curl on your system, because older curl versions tend to act weird with the &lt;em&gt;HTTPS&lt;/em&gt; protocol, and wont be able to connect.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[vagrant@localhost ~]$ bash &amp;lt;(curl -fsSLv https://tiborsimon.io/dotfiles)
* About to connect() to tiborsimon.io port 443 (#0)
*   Trying 104.18.43.82... connected
* Connected to tiborsimon.io (104.18.43.82) port 443 (#0)
* Initializing NSS with certpath: sql:/etc/pki/nssdb
*   CAfile: /etc/pki/tls/certs/ca-bundle.crt
  CApath: none
* NSS error -12286
* Closing connection #0
* SSL connect error
curl: (35) SSL connect error
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;We can now use our scripts via URL deployment. You can install &lt;strong&gt;Docker&lt;/strong&gt; in this way for example.&lt;/p&gt;</summary><category term="dotfiles"></category><category term="tools"></category><category term="script"></category><category term="url"></category><category term="forward"></category><category term="hack"></category></entry><entry><title>Upload ssh key via Github API</title><link href="https://tiborsimon.io/blog/programming/upload-ssh-key-via-github-api/" rel="alternate"></link><updated>2016-03-19T00:00:00+01:00</updated><author><name>Tibor Simon</name></author><id>tag:tiborsimon.io,2016-03-19:blog/programming/upload-ssh-key-via-github-api/</id><summary type="html">&lt;p&gt;Don't you hate the way you used to upload your ssh keys to GitHub? Generate the key. Copy the public key in somehow. You have to use the mouse. You have to click. :D&lt;/p&gt;
&lt;p&gt;Anyway. If you are working on a remote machine, for example one you've just spun up with &lt;strong&gt;vagrant&lt;/strong&gt;, tricks with the mouse might not an option for you. Of course, you can copy your already generated and used ssh key to your machine, but this is not the best approach.&lt;/p&gt;
&lt;h2&gt;Using the GitHub API&lt;/h2&gt;
&lt;p&gt;Using the &lt;a href="https://developer.github.com/v3/"&gt;GitHub v3 API&lt;/a&gt;, we are able to upload our ssh keys via a &lt;a href="https://developer.github.com/v3/users/keys/"&gt;HTTP request&lt;/a&gt; by &lt;a href="https://developer.github.com/v3/users/keys/#create-a-public-key"&gt;creating a public key&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The following code snippets will use the GitHub API call to upload the named public key to the predefined GitHub account. It also handles the possible error cases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;authentication error&lt;/li&gt;
&lt;li&gt;key is already uploaded&lt;/li&gt;
&lt;li&gt;connection error&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can copy and paste this script to your machine, modify the &lt;code&gt;GITHUB_USERNAME&lt;/code&gt; variable, and you are ready to go.&lt;/p&gt;
&lt;p&gt;This is the exact method what I used in my &lt;strong&gt;dotfiles&lt;/strong&gt; deployment system. To learn more about that, read the &lt;a href="https://tiborsimon.io/tools/dotfiles-with-url-deployment/"&gt;corresponding article&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;GITHUB_USERNAME=tiborsimon&lt;/span&gt;
&lt;span class="x"&gt;SSH_KEY=&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="x"&gt;/.ssh/id_rsa&lt;/span&gt;

&lt;span class="x"&gt;if [ ! -f &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;SSH_KEY&lt;/span&gt;&lt;span class="x"&gt; ] || [ ! -f &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;SSH_KEY&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;pub&lt;/span&gt;&lt;span class="x"&gt; ]; then&lt;/span&gt;
&lt;span class="x"&gt;  echo &amp;#39;Generate your ssh key first!&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt;  exit&lt;/span&gt;
&lt;span class="x"&gt;fi&lt;/span&gt;

&lt;span class="x"&gt;github_result=0&lt;/span&gt;
&lt;span class="x"&gt;echo &amp;#39;How do you want to name the key?&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt;read -e KEY_NAME&lt;/span&gt;
&lt;span class="x"&gt;until [ &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;github_result&lt;/span&gt;&lt;span class="x"&gt; -eq 1 ]; do&lt;/span&gt;
&lt;span class="x"&gt;  curl --silent -u &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;GITHUB_USERNAME&lt;/span&gt;&lt;span class="x"&gt;&amp;quot; --data &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;\&amp;quot;title\&amp;quot;:\&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;KEY_NAME&lt;/span&gt;&lt;span class="x"&gt;\&amp;quot;,\&amp;quot;key\&amp;quot;:\&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="err"&gt;cat&lt;/span&gt; &lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;SSH_KEY&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;pub&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt;\&amp;quot;}&amp;quot; https://api.github.com/user/keys &amp;gt; gh-result&lt;/span&gt;
&lt;span class="x"&gt;  if grep -q &amp;#39;key is already in use&amp;#39; gh-result; then&lt;/span&gt;
&lt;span class="x"&gt;    github_result=1&lt;/span&gt;
&lt;span class="x"&gt;    echo &amp;#39;Key is already in use.&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt;  elif grep -q &amp;#39;&amp;quot;verified&amp;quot;: true&amp;#39; gh-result; then&lt;/span&gt;
&lt;span class="x"&gt;    github_result=1&lt;/span&gt;
&lt;span class="x"&gt;    echo &amp;quot;Key (&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;KEY_NAME&lt;/span&gt;&lt;span class="x"&gt;) has been added successfully.&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;  elif grep -q &amp;#39;Bad credentials&amp;#39; gh-result; then&lt;/span&gt;
&lt;span class="x"&gt;    echo &amp;#39;Error during login: invalid username or password!&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt;    echo &amp;#39;Try again!&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt;  else&lt;/span&gt;
&lt;span class="x"&gt;    echo &amp;#39;A problem occured during the upload!&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt;    cat gh-result&lt;/span&gt;
&lt;span class="x"&gt;    echo &amp;#39;Try again!&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt;  fi&lt;/span&gt;
&lt;span class="x"&gt;  rm gh-result&lt;/span&gt;
&lt;span class="x"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;You were presented to a method that allows you to upload ssh keys to your GitHub account via the command line.&lt;/p&gt;</summary><category term="script"></category><category term="url"></category><category term="github"></category><category term="api"></category><category term="upload"></category><category term="ssh"></category><category term="key"></category></entry><entry><title>Minimal MathJax package</title><link href="https://tiborsimon.io/blog/web/minimal-mathjax-package/" rel="alternate"></link><updated>2016-03-07T00:00:00+01:00</updated><author><name>Tibor Simon</name></author><id>tag:tiborsimon.io,2016-03-07:blog/web/minimal-mathjax-package/</id><summary type="html">&lt;p&gt;In the &lt;a href="{{ SITEURL }}/ios/local-mathjax-in-ios-apps/"&gt;previous article&lt;/a&gt; we have created a working MathJax based math rendering iOS app. In this article I will show you how you can shrink down the original 180MB MathJax package into an about 623KB package. This is 99.6% size reduction.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Component&lt;/th&gt;
&lt;th align="center"&gt;Version&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;MathJax&lt;/td&gt;
&lt;td align="center"&gt;2.6.1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;Choose your configuration&lt;/h1&gt;
&lt;p&gt;MathJax supports a very wide range of input and output methods. That is the reason that it is big package. Therefore the most important thing in MathJax size reduction is to decide what input and output method you want to support. In this way you only need to have those sources that implement that methods by throwing away the rest of the package.&lt;/p&gt;
&lt;p&gt;In my example, I wanted to have &lt;strong&gt;LaTEX&lt;/strong&gt; input and &lt;strong&gt;Common HTML&lt;/strong&gt; output.&lt;/p&gt;
&lt;h1&gt;The reducing method&lt;/h1&gt;
&lt;p&gt;The best way to reduce your MathJax package is to create a simple template page, that uses MathJax as you would use it anyway, then remove almost every package content, and then add the ones that it tries to load but fails because the file isn't present. In this way you will end up a package that contains just the right resources to render your equations.&lt;/p&gt;
&lt;p&gt;I started with a simple html page containing a basic MathJax setup:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;MathJax TeX Test Page&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;async&lt;/span&gt;  &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MathJax-2.6.1/MathJax.js?config=TeX-AMS_CHTML&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
      $$\begin{equation}\prod_{\substack{1\le i \le n\\ 1\le j \le m}}M_{i,j} \end{equation}$$
      $$\begin{equation}L&amp;#39; = {L}{\sqrt{1-\frac{v^2}{c^2}}}\end{equation} $$
      $$\begin{align} B&amp;#39;&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;=-\nabla \times E,\\E&amp;#39;&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;=\nabla \times B - 4\pi j,\end{align} $$
      $$\begin{equation}x = a_0 + \frac{1}{a_1 + \frac{1}{a_2 + \frac{1}{a_3 + a_4}}}\end{equation} $$
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/x-mathjax-config&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;MathJax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Hub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Config&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;CommonHTML&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The easiest way I find to put back the necessary resources to the package is to copy the full package into a separated directory, then in a two pane file manager, put back the requested files. You can use your browser's inspector view to find out what is missing.&lt;/p&gt;
&lt;div class="gallery"&gt;
  &lt;img class="jslghtbx-thmb no-shadow" src="/images/articles/minimal-mathjax/reducer-atom-project.png" alt="Editing the html file while putting back the necessary resources." data-jslghtbx data-jslghtbx-caption="Editing the html file while putting back the necessary resources." data-jslghtbx-group="minimal-mathjax-group-02" /&gt;
  &lt;img class="jslghtbx-thmb no-shadow" src="/images/articles/minimal-mathjax/missing-resources.png" alt="Discovering missing resources in the browser's inspector.``" data-jslghtbx data-jslghtbx-caption="Discovering missing resources in the browser's inspector." data-jslghtbx-group="minimal-mathjax-group-02" /&gt;
&lt;/div&gt;

&lt;p&gt;This html test page renders the following equations:&lt;/p&gt;
&lt;div class="gallery"&gt;
  &lt;img class="jslghtbx-thmb no-shadow" src="/images/articles/minimal-mathjax/test-html.png" alt="Testing the MathJax package with a small html file." data-jslghtbx data-jslghtbx-caption="Testing the MathJax package with a small html file." data-jslghtbx-group="minimal-mathjax-group-01" /&gt;
&lt;/div&gt;

&lt;p&gt;If my reduced MathJax package can render this equations, it shouldn't be in trouble render all of my possible further equations. The html page above runs fine with teh following resource tree lising. This reduced package takes up &lt;strong&gt;623KB&lt;/strong&gt; on disk.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;MathJax-2.6.1
├── MathJax.js
├── config
│   └── TeX-AMS_CHTML.js
├── fonts
│   └── HTML-CSS
│       └── TeX
│           └── woff
│               ├── MathJax_AMS-Regular.woff
│               ├── MathJax_Math-Italic.woff
│               ├── MathJax_Size2-Regular.woff
│               ├── MathJax_Size3-Regular.woff
│               └── MathJax_Size4-Regular.woff
└── jax
    └── output
        └── CommonHTML
            ├── autoload
            │   └── mtable.js
            ├── fonts
            │   └── TeX
            │       ├── AMS-Regular.js
            │       └── fontdata.js
            └── jax.js
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once again: I used &lt;strong&gt;LaTEX&lt;/strong&gt; with &lt;strong&gt;Common HTML&lt;/strong&gt; output rendering. This setup heavily depends on your input and output method.&lt;/p&gt;
&lt;p&gt;Hope you find this article series useful ;)&lt;/p&gt;</summary><category term="MathJax"></category><category term="hack"></category><category term="javascript"></category><category term="math"></category><category term="LaTEX"></category></entry><entry><title>Tortex time</title><link href="https://tiborsimon.io/blog/guitar/tortex-time/" rel="alternate"></link><updated>2016-02-28T00:00:00+01:00</updated><author><name>Tibor Simon</name></author><id>tag:tiborsimon.io,2016-02-23:blog/guitar/tortex-time/</id><summary type="html">


    &lt;div class="row"&gt;
      &lt;div class="6u 12u(mobile)"&gt;
        &lt;p&gt;I have decided to buy a bunch of guitar picks at once to save money and time. I won't need to go in the music store every other week, and I won't have to pay the extra price of the local midtown music stores. And that's not all. I also can create a usage statistic, about how I use guitar picks.&lt;/p&gt;

        &lt;p&gt;I numbered every pick I've got - all sixty of them - to keep track of the lifetime. I will also keep track of my guitar sessions to be able to correlate the usage to the actual wearing.&lt;/p&gt;

        &lt;p&gt;Follow me on twitter (&lt;a href="https://twitter.com/tiborsimonio" target="_blank"&gt;@tiborsimonio&lt;/a&gt;) or search for the &lt;a href="https://twitter.com/search?q=%23tortextime" target="_blank"&gt;#tortextime&lt;/a&gt; hashtag to be up to date :)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class="6u 12u(mobile)"&gt;
        &lt;a class="twitter-timeline" href="https://twitter.com/hashtag/tortextime" data-widget-id="704742922370076672" height="340"&gt;#tortextime Tweets&lt;/a&gt; &lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+"://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");&lt;/script&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;div class="gallery"&gt;
      &lt;img class="jslghtbx-thmb" src="/images/articles/tortex-time/tortex-time-main.jpg" alt="Tortex time main image. 60 picks on the table." data-jslghtbx data-jslghtbx-caption="58 picks on the table. 2 other picks have been given as a gift :)" data-jslghtbx-group="tortex-time-group" /&gt;
      &lt;img class="jslghtbx-thmb" src="/images/articles/tortex-time/tortex-time-stack.jpg" alt="Tortex time 60 pick tall stack." data-jslghtbx data-jslghtbx-caption="58 pick tall stack." data-jslghtbx-group="tortex-time-group" /&gt;
      &lt;img class="jslghtbx-thmb" src="/images/articles/tortex-time/tortex-time-numbering.jpg" alt="Tortex time pick numbering 1-60." data-jslghtbx data-jslghtbx-caption="Pick numbering 3-60. The first two was given as a gift." data-jslghtbx-group="tortex-time-group" /&gt;
      &lt;img class="jslghtbx-thmb" src="/images/articles/tortex-time/tortex-time-deviation.jpg" alt="Tortex time manufacturing deviation." data-jslghtbx data-jslghtbx-caption="Manufacturing deviation in the painting." data-jslghtbx-group="tortex-time-group" /&gt;
    &lt;/div&gt;


    &lt;h1&gt;Pick-log&lt;/h1&gt;

    &lt;div class="tortex-time-wrapper"&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;1&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-none.png" alt="1st pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Given as a gift&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;2&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-none.png" alt="2nd pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Given as a gift&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;3&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="3rd pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;In use&lt;br /&gt;23-02-2016..&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;4&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="4th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;5&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="5th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;6&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="6th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;7&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="7th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;8&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="8th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;9&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="9th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;10&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="10th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;11&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="11th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;12&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="12th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;13&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="13th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;14&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="14th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;15&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="15th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;16&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="16th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;17&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="17th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;18&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="18th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;19&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="19th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;20&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="20th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;21&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="21th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;22&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="22th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;23&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="23th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;24&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="24th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;25&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="25th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;26&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="26th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;27&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="27th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;28&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="28th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;29&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="29th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;30&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="30th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;31&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="31th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;32&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="32th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;33&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="33th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;34&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="34th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;35&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="35th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;36&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="36th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;37&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="37th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;38&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="38th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;39&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="39th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;40&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="40th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;41&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="41th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;42&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="42th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;43&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="43th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;44&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="44th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;45&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="45th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;46&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="46th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;47&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="47th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;48&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="48th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;49&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="49th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;50&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="50th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;51&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="51th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;52&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="52th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;53&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="53th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;54&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="54th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;55&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="55th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;56&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="56th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;57&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="57th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;58&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="58th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;59&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="59th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="tortex-time-pick"&gt;
          &lt;span class="pick-overlay"&gt;60&lt;/span&gt;
          &lt;img class="tortex-img" src="/images/articles/tortex-time/pick-new.png" alt="60th pick image." width="50px" /&gt;
        &lt;div class="tortex-descr"&gt;
          &lt;div&gt;&lt;br /&gt;Unused&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;



      &lt;div class="tortex-latest"&gt;&lt;/div&gt;

    &lt;/div&gt;
  </summary><category term="guitar"></category><category term="pick"></category><category term="dunlop"></category><category term="tortextime"></category><category term="statistics"></category></entry><entry><title>Local MathJax in iOS apps</title><link href="https://tiborsimon.io/blog/ios/local-mathjax-in-ios-apps/" rel="alternate"></link><updated>2016-02-20T00:00:00+01:00</updated><author><name>Tibor Simon</name></author><id>tag:tiborsimon.io,2016-02-20:blog/ios/local-mathjax-in-ios-apps/</id><summary type="html">&lt;p&gt;In this article I am going to show you a method to integrate &lt;a href="https://www.mathjax.org"&gt;MathJax&lt;/a&gt; - &lt;em&gt;an external javascript display engine for mathematics&lt;/em&gt; - in an iOS app. I used the following components:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Component&lt;/th&gt;
&lt;th align="center"&gt;Version&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;XCode&lt;/td&gt;
&lt;td align="center"&gt;Version 7.2.1 (7C1002)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;iOS&lt;/td&gt;
&lt;td align="center"&gt;9.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;MathJax&lt;/td&gt;
&lt;td align="center"&gt;2.6.1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Prerequisite&lt;/h2&gt;
&lt;p&gt;I wanted to display &lt;em&gt;mathematical equations&lt;/em&gt; inside an iOS app using existing math render packages. According to &lt;a href="http://stackoverflow.com/a/16002611"&gt;this Stack overflow answer&lt;/a&gt;, &lt;em&gt;mathML&lt;/em&gt; is supported by UIWebView since iOS 5. The downside of this solution, is that you have to use another packages to convert a convenient math equation reprsentation (like LaTEX) to mahtML which is very unconvenient:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;math&lt;/span&gt; &lt;span class="na"&gt;title=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2^(2/(sqrt(6))&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;mstyle&lt;/span&gt; &lt;span class="na"&gt;mathcolor=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;fontfamily=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;sanserif&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;displaystyle=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;msup&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;mn&amp;gt;&lt;/span&gt;2&lt;span class="nt"&gt;&amp;lt;/mn&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;mrow&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;mfrac&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;mn&amp;gt;&lt;/span&gt;2&lt;span class="nt"&gt;&amp;lt;/mn&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;mrow&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;msqrt&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;mrow&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;mn&amp;gt;&lt;/span&gt;6&lt;span class="nt"&gt;&amp;lt;/mn&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;/mrow&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/msqrt&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/mrow&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/mfrac&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/mrow&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/msup&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/mstyle&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/math&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The equivalent &lt;strong&gt;LaTEX&lt;/strong&gt; representation is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;2^{\frac{2}{\sqrt{6}}}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To be able to use LaTEX, a third party engine is needed to produce renderable html from it. I chose &lt;a href="https://www.mathjax.org"&gt;MathJax&lt;/a&gt; for this purpose.&lt;/p&gt;
&lt;h2&gt;Downloading MathJax&lt;/h2&gt;
&lt;p&gt;Download the sources from &lt;a href="https://github.com/mathjax/MathJax/releases/latest" target="_blank"&gt;MathJax's Github page&lt;/a&gt;. At the time I wrote this article, the latest version was &lt;em&gt;2.6.1&lt;/em&gt;. It could take quite a bit of time to download the whole zip file.&lt;/p&gt;
&lt;p&gt;I put the downloaded files into the Xcode project's Vendor folder:&lt;/p&gt;
&lt;p&gt;Simply unboxed the zip, the package takes up &lt;strong&gt;180 MB&lt;/strong&gt; space &lt;em&gt;(that's a lot!)&lt;/em&gt;. In a future article I will show you the minimal needed content of this package that is be able to render the expressions.&lt;/p&gt;
&lt;div class="gallery"&gt;
  &lt;img class="jslghtbx-thmb" src="/images/articles/mathjax-ios/mathjax-ios-vendor-folder.png" alt="Location of the downloaded MathJax sources" data-jslghtbx data-jslghtbx-caption="Location of the downloaded MathJax sources" data-jslghtbx-group="mathjax-ios-group-03" /&gt;
  &lt;img class="jslghtbx-thmb" src="/images/articles/mathjax-ios/mathjax-ios-raw-package-size.png" alt="Size of the freshly downloaded package" data-jslghtbx data-jslghtbx-caption="Size of the freshly downloaded package" data-jslghtbx-group="mathjax-ios-group-03" /&gt;
&lt;/div&gt;

&lt;h2&gt;Adding the MathJax package to the project&lt;/h2&gt;
&lt;p&gt;I added the downloaded and extracted MathJax sources to a single view based Xcode project, by dragging the folder into the project navigator. I unchecked the copy sources option.&lt;/p&gt;
&lt;div class="gallery"&gt;
  &lt;img class="jslghtbx-thmb" src="/images/articles/mathjax-ios/adding-the-sources.png" alt="Adding the sources to the project" data-jslghtbx data-jslghtbx-caption="Adding the sources to the project" data-jslghtbx-group="mathjax-ios-group-02" /&gt;
  &lt;img class="jslghtbx-thmb" src="/images/articles/mathjax-ios/copy-items.png" alt="Unchecking the copy items if needed option" data-jslghtbx data-jslghtbx-caption="Unchecking the copy items if needed option" data-jslghtbx-group="mathjax-ios-group-02" /&gt;
&lt;/div&gt;

&lt;h2&gt;Using the MathJax package&lt;/h2&gt;
&lt;p&gt;After the sources are placed to the right place, it's time to use them. I draged a &lt;em&gt;UIWebView&lt;/em&gt; to the Storyboard, and created a connection to the ViewController class (&lt;code&gt;@IBOutlet weak var myWebView: UIWebView!&lt;/code&gt;). I wanted to display the following simple html page in the UIWebView...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;MathJax TeX Test Page&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;async&lt;/span&gt;
            &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MathJax-2.6.1/MathJax.js?config=TeX-AMS_CHTML&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;font-size: 30pt; color: #eee;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            $$    
            \begin{equation}
              \prod_{\substack{
                        1\le i \le n\\
                        1\le j \le m}}
                 M_{i,j}
            \end{equation}
            $$
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;... so I used its &lt;code&gt;loadHTMLString&lt;/code&gt; method to do that:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;//&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;  &lt;span class="n"&gt;ViewController&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;swift&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;  &lt;span class="n"&gt;MathJaxTest01&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;  &lt;span class="n"&gt;Created&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;Tibor&lt;/span&gt; &lt;span class="n"&gt;Simon&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mo"&gt;02&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;16.&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;  &lt;span class="n"&gt;Copyright&lt;/span&gt; &lt;span class="err"&gt;©&lt;/span&gt; &lt;span class="mi"&gt;2016&lt;/span&gt; &lt;span class="n"&gt;Tibor&lt;/span&gt; &lt;span class="n"&gt;Simon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;All&lt;/span&gt; &lt;span class="n"&gt;rights&lt;/span&gt; &lt;span class="n"&gt;reserved&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;UIKit&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ViewController&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UIViewController&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="nd"&gt;@IBOutlet&lt;/span&gt; &lt;span class="n"&gt;weak&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;myWebView&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UIWebView&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;

    &lt;span class="n"&gt;override&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt; &lt;span class="n"&gt;viewDidLoad&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;viewDidLoad&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;Do&lt;/span&gt; &lt;span class="nb"&gt;any&lt;/span&gt; &lt;span class="n"&gt;additional&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt; &lt;span class="n"&gt;after&lt;/span&gt; &lt;span class="n"&gt;loading&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;typically&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;a&lt;/span&gt; &lt;span class="nn"&gt;nib.&lt;/span&gt;

        &lt;span class="n"&gt;let&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;NSBundle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainBundle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bundlePath&lt;/span&gt;
        &lt;span class="n"&gt;let&lt;/span&gt; &lt;span class="n"&gt;baseURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;NSURL&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fileURLWithPath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;let&lt;/span&gt; &lt;span class="n"&gt;myHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;MathJax TeX Test Page&amp;lt;/title&amp;gt;&amp;lt;script type=&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;text/javascript&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; async  src=&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;MathJax-2.6.1/MathJax.js?config=TeX-AMS_CHTML&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;  &amp;lt;div style=&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;font-size: 30pt; color: #eee;&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;&amp;gt;$$&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;begin{equation}&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;prod_{&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;substack{1&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;le i &lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;le n&lt;/span&gt;&lt;span class="se"&gt;\\\\&lt;/span&gt;&lt;span class="s"&gt; 1&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;le j &lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;le m}}M_{i,j} &lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;end{equation}$$&amp;lt;/div&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;myWebView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loadHTMLString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;myHTML&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;baseURL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;baseURL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;override&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt; &lt;span class="n"&gt;didReceiveMemoryWarning&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;didReceiveMemoryWarning&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;Dispose&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="nb"&gt;any&lt;/span&gt; &lt;span class="n"&gt;resources&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;recreated&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Testing with the simulator&lt;/h2&gt;
&lt;p&gt;The project loads up to the simulator a bit slowly. After it loads, it renders the mathematical expression to the &lt;em&gt;UIWebView&lt;/em&gt; in 8 phases:&lt;/p&gt;
&lt;div class="gallery"&gt;
  &lt;img class="jslghtbx-thmb" src="/images/articles/mathjax-ios/mathjax-ios-00.png" alt="Rendering phase 1: It starts as a blank screen." data-jslghtbx data-jslghtbx-caption="Rendering phase 1: It starts as a blank screen." data-jslghtbx-group="mathjax-ios-group" /&gt;
  &lt;img class="jslghtbx-thmb" src="/images/articles/mathjax-ios/mathjax-ios-01.png" alt="Rendering phase 2: Then it loads the raw LaTEX source." data-jslghtbx data-jslghtbx-caption="Rendering phase 2: Then it loads the raw LaTEX source." data-jslghtbx-group="mathjax-ios-group" /&gt;
  &lt;img class="jslghtbx-thmb" src="/images/articles/mathjax-ios/mathjax-ios-02.png" alt="Rendering phase 3: First rendering pass." data-jslghtbx data-jslghtbx-caption="Rendering phase 3: First rendering pass." data-jslghtbx-group="mathjax-ios-group" /&gt;
  &lt;img class="jslghtbx-thmb" src="/images/articles/mathjax-ios/mathjax-ios-03.png" alt="Rendering phase 4: Loading CommonHTML sources for the final rendering pass." data-jslghtbx data-jslghtbx-caption="Rendering phase 4: Loading CommonHTML sources for the final rendering pass." data-jslghtbx-group="mathjax-ios-group" /&gt;
  &lt;img class="jslghtbx-thmb" src="/images/articles/mathjax-ios/mathjax-ios-04.png" alt="Rendering phase 5: Renders final image." data-jslghtbx data-jslghtbx-caption="Rendering phase 5: Renders final image." data-jslghtbx-group="mathjax-ios-group" /&gt;
  &lt;img class="jslghtbx-thmb" src="/images/articles/mathjax-ios/mathjax-ios-05.png" alt="Rendering phase 6: Becames blank again." data-jslghtbx data-jslghtbx-caption="Rendering phase 6: Becames blank again." data-jslghtbx-group="mathjax-ios-group" /&gt;
  &lt;img class="jslghtbx-thmb" src="/images/articles/mathjax-ios/mathjax-ios-06.png" alt="Rendering phase 7: Final image appears in fractions." data-jslghtbx data-jslghtbx-caption="Rendering phase 7: Final image appears in fractions." data-jslghtbx-group="mathjax-ios-group" /&gt;
  &lt;img class="jslghtbx-thmb" src="/images/articles/mathjax-ios/mathjax-ios-07.png" alt="Rendering phase 8: Render finished." data-jslghtbx data-jslghtbx-caption="Rendering phase 8: Render finished." data-jslghtbx-group="mathjax-ios-group" /&gt;
&lt;/div&gt;

&lt;p&gt;The whole rendering happens in less then half a second, but it is noticeable. If you want to use this method to render mathematical expresions in your app, you have to make sure, you only show your &lt;em&gt;UIWebView&lt;/em&gt;, when it fulli loaded.&lt;/p&gt;
&lt;h2&gt;Try it out yourself!&lt;/h2&gt;
&lt;p&gt;You can download the whole Xcode project with the added MathJax sources from &lt;a href="https://github.com/tiborsimon/ios-local-mathjax-template" target="_blank"&gt;the project's Github repository&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Acknowledgement&lt;/h2&gt;
&lt;p&gt;For this project, I get a lot of ideas from &lt;a href="http://new2objectivec.blogspot.hu/2013/03/mathjax-v21-works-beautifully-on-ios-61.html?m=1" target="_blank"&gt;New 2 Objective-C&lt;/a&gt; blog. His implementation is based on a local file writing and reading, which is pretty slow, but it works :)&lt;/p&gt;
&lt;p&gt;I also used some ideas from Stack Overflow to &lt;a href="http://stackoverflow.com/questions/3646930/how-to-make-a-transparent-uiwebview" target="_blank"&gt;make my UIWebView transparent&lt;/a&gt;&lt;/p&gt;</summary><category term="MathJax"></category><category term="ios"></category><category term="hack"></category><category term="javascript"></category><category term="swift"></category><category term="math"></category><category term="LaTEX"></category></entry><entry><title>Get half of the list in Pelican</title><link href="https://tiborsimon.io/blog/python/get-half-of-the-list-in-pelican/" rel="alternate"></link><updated>2016-02-14T00:00:00+01:00</updated><author><name>Tibor Simon</name></author><id>tag:tiborsimon.io,2016-02-14:blog/python/get-half-of-the-list-in-pelican/</id><summary type="html">&lt;p&gt;I wanted to display a list of articles in a two columns. If there are even number of articles, the two columns will have the same number articles. If there are odd number of articles, the first column will contain more articles then the second. This behavior can be achieved with a ceil-like function, which returns the smallest integer greater than or equal to a given number.&lt;/p&gt;
&lt;h1&gt;Using built in Jinja2 filters&lt;/h1&gt;
&lt;p&gt;In the &lt;strong&gt;first&lt;/strong&gt; solution &lt;em&gt;we are using&lt;/em&gt; only the built in Jinja filters. Because of the lack of mathematical functions in the built in filters, we need to hack the only available rounding filter (&lt;code&gt;round&lt;/code&gt;) to be able to use it as a &lt;code&gt;ceil&lt;/code&gt; like function.&lt;/p&gt;
&lt;p&gt;The steps are the followings:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Get the half of the article list's length&lt;/li&gt;
&lt;li&gt;Add a small number from the &lt;code&gt;]0,1[&lt;/code&gt; intervallum&lt;/li&gt;
&lt;li&gt;Use the round filter&lt;/li&gt;
&lt;li&gt;Cast the result to &lt;em&gt;integer&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{% set article_middle_index = articles|length / 2 %}
{% set article_middle_index = article_middle_index + 0.2 %}
{% set article_middle_index = article_middle_index|round %}
{% set article_middle_index = article_middle_index|int %}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Since &lt;code&gt;{{ 0.5|round }}&lt;/code&gt; is &lt;code&gt;0.0&lt;/code&gt; according to Jinja2, we need to add a small number to the halfed number, to achieve the ceil-like behavior.&lt;/p&gt;
&lt;h1&gt;Writing a custom Jinja filter&lt;/h1&gt;
&lt;p&gt;We can also write a custom Jinja filter that calculates the middle index of a list, by appending a small function definition and a special dictionary that tells Pelican to use the function definition as a Jinja filter to the &lt;code&gt;pelicanconf.py&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;def list_half_index(content, *args):
    return ceil(len(content))

JINJA_FILTERS = {
    &amp;#39;list_half_index&amp;#39;: list_half_index,
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the Pelican template files, we can use our custom filter as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{% set article_middle_index = articles|middle_index %}
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Using the middle index&lt;/h1&gt;
&lt;p&gt;We have now the middle index of an article list, so we can use it to split the list to half:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;row&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;6u 6u(tablet) 12u(mobile)&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    {% for article in articles[:article_middle_index] %}
      {% include &amp;#39;includes/article-card.html&amp;#39; %}
    {% endfor %}
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;6u 6u(tablet) 12u(mobile)&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    {% for article in articles[article_middle_index:] %}
      {% include &amp;#39;includes/article-card.html&amp;#39; %}
    {% endfor %}
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We ended up having two coloms of articles that are generated from a single list.&lt;/p&gt;</summary><category term="pelican"></category><category term="jinja2"></category><category term="lists"></category><category term="hack"></category></entry><entry><title>Writing an equation engine</title><link href="https://tiborsimon.io/blog/programming/writing-an-equation-engine/" rel="alternate"></link><updated>2015-11-11T00:00:00+01:00</updated><author><name>Tibor Simon</name></author><id>tag:tiborsimon.io,2015-11-11:blog/programming/writing-an-equation-engine/</id><summary type="html">&lt;h2&gt;Sinusoid generation summary&lt;/h2&gt;
&lt;p&gt;Let's sum up the previous article. If you want to generate a sinusoid signal you have 5 possibble ways to do that.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Method index&lt;/th&gt;
&lt;th align="left"&gt;Required parameters&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;1&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;n&lt;/code&gt; &lt;code&gt;N&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;a signal consisting of &lt;code&gt;n&lt;/code&gt; data points with &lt;code&gt;N&lt;/code&gt;&lt;br&gt; periods in it&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;2&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;L&lt;/code&gt; &lt;code&gt;N&lt;/code&gt; &lt;code&gt;fs&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;L&lt;/code&gt; seconds long signal sampled at &lt;code&gt;fs&lt;/code&gt; consisting of &lt;br&gt;&lt;code&gt;N&lt;/code&gt; periods in it&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;3&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;f&lt;/code&gt; &lt;code&gt;N&lt;/code&gt; &lt;code&gt;fs&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;a signal sampled at &lt;code&gt;fs&lt;/code&gt; sampling rate with &lt;code&gt;N&lt;/code&gt; &lt;br&gt;periods in it with the frequency &lt;code&gt;f&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;4&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;f&lt;/code&gt; &lt;code&gt;n&lt;/code&gt; &lt;code&gt;fs&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;a signal consisting of &lt;code&gt;n&lt;/code&gt; &lt;br&gt;data points sampled at &lt;code&gt;fs&lt;/code&gt; sampling rate with the frequency &lt;code&gt;f&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;5&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;f&lt;/code&gt; &lt;code&gt;L&lt;/code&gt; &lt;code&gt;fs&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;a signal sampled at &lt;code&gt;fs&lt;/code&gt; sampling rate with the &lt;br&gt;duration of &lt;code&gt;L&lt;/code&gt; seconds with the frequency &lt;code&gt;f&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Where the parameters are&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Parameter&lt;/th&gt;
&lt;th align="left"&gt;Unit&lt;/th&gt;
&lt;th align="left"&gt;Parameter name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;phi&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[degree]&lt;/td&gt;
&lt;td align="left"&gt;phase&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;A&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[full scale]&lt;/td&gt;
&lt;td align="left"&gt;amplitude&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;f&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[Hz]&lt;/td&gt;
&lt;td align="left"&gt;frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;fs&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[Hz]&lt;/td&gt;
&lt;td align="left"&gt;sample rate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;T&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[s]&lt;/td&gt;
&lt;td align="left"&gt;period&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;dt&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[s]&lt;/td&gt;
&lt;td align="left"&gt;sample time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;L&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[s]&lt;/td&gt;
&lt;td align="left"&gt;signal duration&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;N&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[-]&lt;/td&gt;
&lt;td align="left"&gt;number of periods&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;n&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[-]&lt;/td&gt;
&lt;td align="left"&gt;number of samples&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Required parts&lt;/h2&gt;
&lt;p&gt;To create an equation engine we have to solve the following problems:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Identify the passed parameters&lt;/li&gt;
&lt;li&gt;Calculate the necessary parameters from the available ones&lt;/li&gt;
&lt;li&gt;Use the parameters in the equations&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Identifying the passed parameters&lt;/h3&gt;
&lt;p&gt;We need to identify what parameters were passed to the generator function to be able to decide what parameters can we
calculate with the passed ones. Hopefully we can use &lt;a href="http://tiborsimon.io/projects/TSPR0002/" target="_blank"&gt;Simple Input Parser&lt;/a&gt;
that can provide the passed parameter flags in its &lt;em&gt;extra flag&lt;/em&gt; mode.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[data, flags] = simple_input_parser(data, raw_varargin, validators);
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The flags variable will be the structure that will contain the parameter flags. One if the parameter was parsed and
zero if not.&lt;/p&gt;
&lt;h3&gt;Calculating the parameters&lt;/h3&gt;
&lt;p&gt;To be able to substitute to the generator equations, we need to make sure to have all the necessary parameters
to do that. In case if wo do not have all the ones, we have to try to calculate them from the given ones.&lt;/p&gt;
&lt;p&gt;The following table contains all possible way to get a parameter from the others.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;f&lt;/th&gt;
&lt;th align="left"&gt;T&lt;/th&gt;
&lt;th align="left"&gt;n&lt;/th&gt;
&lt;th align="left"&gt;N&lt;/th&gt;
&lt;th align="left"&gt;fs&lt;/th&gt;
&lt;th align="left"&gt;dt&lt;/th&gt;
&lt;th align="left"&gt;L&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;1/T&lt;/td&gt;
&lt;td align="left"&gt;1/f&lt;/td&gt;
&lt;td align="left"&gt;L fs&lt;/td&gt;
&lt;td align="left"&gt;L/T&lt;/td&gt;
&lt;td align="left"&gt;1/dt&lt;/td&gt;
&lt;td align="left"&gt;1/fs&lt;/td&gt;
&lt;td align="left"&gt;N T&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;N/L&lt;/td&gt;
&lt;td align="left"&gt;L/N&lt;/td&gt;
&lt;td align="left"&gt;L/dt&lt;/td&gt;
&lt;td align="left"&gt;L f&lt;/td&gt;
&lt;td align="left"&gt;n/L&lt;/td&gt;
&lt;td align="left"&gt;L/n&lt;/td&gt;
&lt;td align="left"&gt;n dt&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;n dt/L/T&lt;/td&gt;
&lt;td align="left"&gt;L/n/dt/f&lt;/td&gt;
&lt;td align="left"&gt;N T/dt&lt;/td&gt;
&lt;td align="left"&gt;n dt/T&lt;/td&gt;
&lt;td align="left"&gt;n/N/T&lt;/td&gt;
&lt;td align="left"&gt;N T/n&lt;/td&gt;
&lt;td align="left"&gt;N/f&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;n/fs/T/L&lt;/td&gt;
&lt;td align="left"&gt;L fs/n/f&lt;/td&gt;
&lt;td align="left"&gt;N T fs&lt;/td&gt;
&lt;td align="left"&gt;n dt f&lt;/td&gt;
&lt;td align="left"&gt;n/L/f/T&lt;/td&gt;
&lt;td align="left"&gt;L f T/n&lt;/td&gt;
&lt;td align="left"&gt;n/fs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;-&lt;/td&gt;
&lt;td align="left"&gt;-&lt;/td&gt;
&lt;td align="left"&gt;-&lt;/td&gt;
&lt;td align="left"&gt;n/fs/T&lt;/td&gt;
&lt;td align="left"&gt;-&lt;/td&gt;
&lt;td align="left"&gt;-&lt;/td&gt;
&lt;td align="left"&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;-&lt;/td&gt;
&lt;td align="left"&gt;-&lt;/td&gt;
&lt;td align="left"&gt;-&lt;/td&gt;
&lt;td align="left"&gt;n f/fs&lt;/td&gt;
&lt;td align="left"&gt;-&lt;/td&gt;
&lt;td align="left"&gt;-&lt;/td&gt;
&lt;td align="left"&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This table can be programmed into &lt;strong&gt;calculator functions&lt;/strong&gt; which are going to try to calculate a parameter from the
others. If a &lt;em&gt;calculator function&lt;/em&gt; is unable to calculate a parameter it throws an exception.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;%% Parameter construction&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;f &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;get_f&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;throw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;T &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;get_T&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;
        &lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;
        &lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;
        &lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;
        &lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;falgs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;
        &lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;throw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;n &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;get_n&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;
        &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;
        &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;
        &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;
        &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;
        &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;throw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;N &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;get_N&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;
        &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;
        &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;
        &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;
        &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;
        &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;
        &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;
        &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;throw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;fs &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;get_fs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;
        &lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;
        &lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;
        &lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;
        &lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;
        &lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;throw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;dt &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;get_dt&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;
        &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;
        &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;
        &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;
        &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;
        &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;throw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;L &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;get_L&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;
        &lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;
        &lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;
        &lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;
        &lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;
        &lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;throw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Using the parameters in the equations&lt;/h3&gt;
&lt;p&gt;Lastly we have to implement the &lt;strong&gt;generator functions&lt;/strong&gt; for all 5 cases. These functions implement the
sinusoid signal generation with a given parameter set. For more details see the first episode of this article series.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;%% Signal synthesizer functions&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;s &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;construct_with_n_N&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_n&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_N&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;phi&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;phi&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;trigfun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;s &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;construct_with_L_N_fs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_L&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_N&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_fs&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;phi&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;phi&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;trigfun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;s &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;construct_with_f_N_fs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_f&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_N&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_fs&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;phi&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;phi&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;trigfun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;s &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;construct_with_n_f_fs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_n&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_f&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_fs&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;phi&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;phi&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;trigfun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;s &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;construct_with_L_f_fs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_L&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_f&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_fs&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;phi&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;phi&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;trigfun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Putting everything together&lt;/h2&gt;
&lt;p&gt;The last step is to put everything together.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;We have the flag structure that indicates what parameters were passed. This structure can be used by the &lt;em&gt;calculator functions&lt;/em&gt; to
   determine if a parameter can be calculated or not.&lt;/li&gt;
&lt;li&gt;We have &lt;em&gt;calculator functions&lt;/em&gt; that can calculate the necessary parameters for the &lt;em&gt;generator functions&lt;/em&gt;. If one parameter cannot be
   calculated, an exception will be raised.&lt;/li&gt;
&lt;li&gt;We have &lt;em&gt;generator functions&lt;/em&gt; that can generate the sinusoid signal if all necessary parameters are available for them.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The only thing what we have to do is to use the &lt;em&gt;generator functions&lt;/em&gt; to try to generate the sinusoid signal in &lt;strong&gt;every possible way&lt;/strong&gt;.
If one &lt;em&gt;generator function&lt;/em&gt; fails, we try another until there is no more &lt;em&gt;generator function&lt;/em&gt; left. In that case we can determine, that
the given parameter set, there is no way to generate a sinusoud signal.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;%% Mode Selection&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;construct_with_n_N&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;catch&lt;/span&gt;
   &lt;span class="k"&gt;try&lt;/span&gt;
       &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;construct_with_L_N_fs&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="k"&gt;catch&lt;/span&gt;
      &lt;span class="k"&gt;try&lt;/span&gt;
          &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;construct_with_f_N_fs&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="k"&gt;catch&lt;/span&gt;
          &lt;span class="k"&gt;try&lt;/span&gt;
              &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;construct_with_n_f_fs&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
          &lt;span class="k"&gt;catch&lt;/span&gt;
              &lt;span class="k"&gt;try&lt;/span&gt;
                  &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;construct_with_L_f_fs&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
              &lt;span class="k"&gt;catch&lt;/span&gt;
                  &lt;span class="n"&gt;throw_exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;parameterError&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;With the given parameters there is no way to construct a sinusoid signal!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
              &lt;span class="k"&gt;end&lt;/span&gt;
          &lt;span class="k"&gt;end&lt;/span&gt;

      &lt;span class="k"&gt;end&lt;/span&gt;
   &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;And that's it. This method was used in &lt;a href="http://tiborsimon.io/projects/TSPR0003/" target="_blank"&gt;Smart Sinusoids&lt;/a&gt; to generate
the sinusoid signals.&lt;/p&gt;</summary><category term="parameter"></category><category term="equation"></category></entry><entry><title>Chart.js with subtabbed tabs</title><link href="https://tiborsimon.io/blog/web/chartjs-with-subtabbed-tabs/" rel="alternate"></link><updated>2015-10-30T00:00:00+01:00</updated><author><name>Tibor Simon</name></author><id>tag:tiborsimon.io,2015-10-30:blog/web/chartjs-with-subtabbed-tabs/</id><summary type="html">&lt;p&gt;People seem to have problems too by using tabs to show dynamic content on sites. The general solution to this problem is to use a bootstrap built in
callback that is fired when a tab activated to destroy the actual chart and draw the new chart based on
the tab selected. Well, that works fine until you have tabbed content in your tabs as well.&lt;/p&gt;
&lt;p&gt;My plan was to create a tabbed page design that has sub tabs in them you can select
with a dropdown menu. So each main tab has its own dropdown menu.&lt;/p&gt;
&lt;p&gt;I came up with this solution that will store the last active chart globally as well as the last active
chart canvas context and data per main tabs. This variables make it possible to remember where the user
have left a tab, and it will be able to resume there.&lt;/p&gt;
&lt;iframe width="100%" height="360" src="//jsfiddle.net/0scz7zak/2/embedded/result,js,html,css/" allowfullscreen="allowfullscreen" frameborder="0"&gt;&lt;/iframe&gt;</summary><category term="javascript"></category><category term="chart"></category><category term="bootstrap"></category></entry><entry><title>Mandatory + arbitrary order</title><link href="https://tiborsimon.io/blog/python/mandatory-arbitrary-order/" rel="alternate"></link><updated>2015-10-29T00:00:00+01:00</updated><author><name>Tibor Simon</name></author><id>tag:tiborsimon.io,2015-10-29:blog/python/mandatory-arbitrary-order/</id><summary type="html">&lt;p&gt;You cannot use character set like &lt;code&gt;[abc]&lt;/code&gt; because this pattern does not garanties the mandatoryness, even if you write the
exact number of it &lt;code&gt;[abc]{3}&lt;/code&gt;. It will match three &lt;code&gt;a&lt;/code&gt; characters too. You cannot force the regular expression engine to
handle arbitrary order with the mandatory constraint. You have to do it yourself with permutation.&lt;/p&gt;
&lt;p&gt;You have to tell the regexp engine that you want allow all the possible permutation of a character list, with optional
charachters between them. You can do it with options.&lt;/p&gt;
&lt;p&gt;For example, if you want to match words that has &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; in them in arbitrary order, you can write: &lt;code&gt;((.*a.*b.*)|(.*b.*a.*))&lt;/code&gt;.
Not so horrible, is it. But. We are talking about permutation. If you want to add 3 characters, the pattern length will increase:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;((.*a.*b.*c.*)|
 (.*a.*c.*b.*)|
 (.*b.*a.*c.*)|
 (.*b.*c.*a.*)|
 (.*c.*a.*b.*)|
 (.*c.*b.*a.*))
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For 4 characters, it reaches the 409 charachters length:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;((.*a.*b.*c.*d.*)|
 (.*a.*b.*d.*c.*)|
 (.*a.*c.*b.*d.*)|
 (.*a.*c.*d.*b.*)|
 (.*a.*d.*b.*c.*)|
 (.*a.*d.*c.*b.*)|
 (.*b.*a.*c.*d.*)|
 (.*b.*a.*d.*c.*)|
 (.*b.*c.*a.*d.*)|
 (.*b.*c.*d.*a.*)|
 (.*b.*d.*a.*c.*)|
 (.*b.*d.*c.*a.*)|
 (.*c.*a.*b.*d.*)|
 (.*c.*a.*d.*b.*)|
 (.*c.*b.*a.*d.*)|
 (.*c.*b.*d.*a.*)|
 (.*c.*d.*a.*b.*)|
 (.*c.*d.*b.*a.*)|
 (.*d.*a.*b.*c.*)|
 (.*d.*a.*c.*b.*)|
 (.*d.*b.*a.*c.*)|
 (.*d.*b.*c.*a.*)|
 (.*d.*c.*a.*b.*)|
 (.*d.*c.*b.*a.*))
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Generator in python&lt;/h3&gt;
&lt;p&gt;You can write a generator for this regexp pattern easily in python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="s-Atom"&gt;from&lt;/span&gt; &lt;span class="s-Atom"&gt;itertools&lt;/span&gt; &lt;span class="s-Atom"&gt;import&lt;/span&gt; &lt;span class="s-Atom"&gt;permutations&lt;/span&gt;
&lt;span class="s-Atom"&gt;import&lt;/span&gt; &lt;span class="s-Atom"&gt;re&lt;/span&gt;

&lt;span class="s-Atom"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generate_mandatory_arbitrary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;
    &lt;span class="s-Atom"&gt;pattern_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;&amp;#39;(&amp;#39;&lt;/span&gt;
    &lt;span class="s-Atom"&gt;for&lt;/span&gt; &lt;span class="s-Atom"&gt;p&lt;/span&gt; &lt;span class="s-Atom"&gt;in&lt;/span&gt; &lt;span class="nf"&gt;permutations&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;
        &lt;span class="s-Atom"&gt;pattern_string&lt;/span&gt; &lt;span class="s-Atom"&gt;+=&lt;/span&gt; &lt;span class="s-Atom"&gt;&amp;#39;(.*&amp;#39;&lt;/span&gt;
        &lt;span class="s-Atom"&gt;for&lt;/span&gt; &lt;span class="s-Atom"&gt;i&lt;/span&gt; &lt;span class="s-Atom"&gt;in&lt;/span&gt; &lt;span class="nn"&gt;p&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="s-Atom"&gt;pattern_string&lt;/span&gt; &lt;span class="s-Atom"&gt;+=&lt;/span&gt; &lt;span class="s-Atom"&gt;&amp;#39;{}.*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="s-Atom"&gt;pattern_string&lt;/span&gt; &lt;span class="s-Atom"&gt;+=&lt;/span&gt; &lt;span class="s-Atom"&gt;&amp;#39;)|&amp;#39;&lt;/span&gt;
    &lt;span class="s-Atom"&gt;return&lt;/span&gt; &lt;span class="s-Atom"&gt;pattern_string&lt;/span&gt;&lt;span class="p"&gt;[:-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s-Atom"&gt;&amp;#39;)&amp;#39;&lt;/span&gt;

&lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;generate_mandatory_arbitrary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;#39;abc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="regexp"></category><category term="permutation"></category></entry><entry><title>Fuzzy search and sort algorithm</title><link href="https://tiborsimon.io/blog/python/fuzzy-search-and-sort-algorithm/" rel="alternate"></link><updated>2015-10-25T00:00:00+02:00</updated><author><name>Tibor Simon</name></author><id>tag:tiborsimon.io,2015-10-25:blog/python/fuzzy-search-and-sort-algorithm/</id><summary type="html">&lt;p&gt;A good example for this is Sublime Text's search mechanism. You start to type in your query, and apart from
the exact matches you will get the matches containing the letters you gave but not in the exact order. In this
way you will find what you are looking for with a good chance even if you don't know the exact name.&lt;/p&gt;
&lt;p&gt;The problem has two parts: &lt;strong&gt;searching&lt;/strong&gt; and &lt;strong&gt;sorting&lt;/strong&gt;. It is not enough to provide all the relevant results that matched to
the search query, but you have to sort the result in the relevance order.&lt;/p&gt;
&lt;h3&gt;Searching&lt;/h3&gt;
&lt;p&gt;The first part is the easier part. You only have to generate a clever regular expression from the
given search query.&lt;/p&gt;
&lt;p&gt;You need to make sure, that between the given query's characters there might be another characters.
This can be achieved by inserting &lt;code&gt;.*&lt;/code&gt; tokens:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;foo&lt;/code&gt; -&amp;gt; &lt;code&gt;.*f.*o.*o.*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You may also want to capture each provided search characters in order to know it's positions for later use.
The regexp engine can provide the positions for the matched groups.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.*f.*o.*o.*&lt;/code&gt; -&amp;gt; &lt;code&gt;.*(f).*(o).*(o).*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;But be aware. This capturing may result you an unexpected result when you want to use the provided group
positions by the regexp engine. Consider the following scenario: you want to find matches for 'x'. The
search query will be transformed into &lt;code&gt;.*(x).*&lt;/code&gt;. Everything seems to be good, until your database contains
 a key that has more than one &lt;code&gt;x&lt;/code&gt; characters in it. The regexp engine will match this key, but it will
capture the last &lt;code&gt;x&lt;/code&gt; character in the key&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;. If your sorting mechanism is based on the captured group
positions, this will be misleading for you.&lt;/p&gt;
&lt;p&gt;To solve this issue, you have to force the regexp engine to match every character but to next captured character in the pattern.
You need to generate a more complex regular expression:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.*(f).*(o).*(o).*&lt;/code&gt; -&amp;gt; &lt;code&gt;[^f]*(f)[^o]*(o)[^o]*(o).*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This is the final regular expression we are going to use in this article. We can now produce the match
results, it's time to sort them.&lt;/p&gt;
&lt;h3&gt;Sorting&lt;/h3&gt;
&lt;p&gt;As I mentioned earlier, we are going to use the captured group's positions to sort the matched results.
The sorting algorithm will weight every match result, and based on that weight, the soring can be executed.&lt;/p&gt;
&lt;p&gt;The weighting is based on the distance between the captured groups in a weighted manner. The distance between the first
characters is punished by more weight that the distance between the last characters. In this way if you know partly the first few characters
you want to search, this weighting method will provide the results matched in the first characters first. The lightest the matched result, the
more relevant it is, so it will be present earlier in the provided search result.&lt;/p&gt;
&lt;p&gt;You can implement this behavior by iterating through the captured groups position list from back to front, calculating the distance between the matches and
multiplying them by a weighting factor. After each iteration you increase this weighting factor. And that's is.&lt;/p&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;We have reviewed the fuzzy search and sort algorithm. You can find the usage example and the implementation in the following code snippets:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;fuzzy&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pprint&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pprint&lt;/span&gt;

&lt;span class="n"&gt;data_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;efo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;efoo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;dfsfoo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;efiofo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;abc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;cba&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;ertfo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;fefefofefioiio&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fuzzy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data_list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# &amp;gt;&amp;gt; [&amp;#39;foo&amp;#39;, &amp;#39;efoo&amp;#39;, &amp;#39;efiofo&amp;#39;, &amp;#39;dfsfoo&amp;#39;, &amp;#39;fefefofefioiio&amp;#39;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The previous example had the following internal data structure.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[{&amp;#39;spans&amp;#39;: ((0, 1), (1, 2), (2, 3)), &amp;#39;string&amp;#39;: &amp;#39;foo&amp;#39;, &amp;#39;weight&amp;#39;: 0},
 {&amp;#39;spans&amp;#39;: ((1, 2), (2, 3), (3, 4)), &amp;#39;string&amp;#39;: &amp;#39;efoo&amp;#39;, &amp;#39;weight&amp;#39;: 4},
 {&amp;#39;spans&amp;#39;: ((1, 2), (3, 4), (5, 6)), &amp;#39;string&amp;#39;: &amp;#39;efiofo&amp;#39;, &amp;#39;weight&amp;#39;: 7},
 {&amp;#39;spans&amp;#39;: ((1, 2), (4, 5), (5, 6)), &amp;#39;string&amp;#39;: &amp;#39;dfsfoo&amp;#39;, &amp;#39;weight&amp;#39;: 8},
 {&amp;#39;spans&amp;#39;: ((0, 1), (5, 6), (10, 11)), &amp;#39;string&amp;#39;: &amp;#39;fefefofefioiio&amp;#39;, &amp;#39;weight&amp;#39;: 12}]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And here is the implementation available as a gist.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# F U Z Z Y   S E A R C H   S Y S T E M
# Created by Tibor Simon
#
# The MIT License (MIT)
#
# Copyright (c) 2015 Tibor Simon
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the &amp;quot;Software&amp;quot;), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED &amp;quot;AS IS&amp;quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import re


def search(raw_list, search_string, ignore_case=True):
    if search_string == &amp;#39;&amp;#39;:
        return raw_list
    else:
        search_pattern = _create_search_pattern_from(search_string)
        result = _get_filtered_result_list_structure(raw_list, search_pattern, ignore_case)
        result = _sort_result_list(result)
        return [r[&amp;#39;string&amp;#39;] for r in result]


def _create_search_pattern_from(pattern):
    grouped = &amp;#39;[^{}]*&amp;#39;.format(pattern[0])
    for i in range(len(pattern)):
        if i &amp;lt; len(pattern) - 1:
            grouped += &amp;#39;({})[^{}]*&amp;#39;.format(pattern[i], pattern[i + 1])
        else:
            grouped += &amp;#39;({})&amp;#39;.format(pattern[i])
    grouped += &amp;#39;.*&amp;#39;
    return grouped


def _get_filtered_result_list_structure(raw_list, search_pattern, ignore_case):
    if ignore_case:
        p = re.compile(search_pattern, re.IGNORECASE)
    else:
        p = re.compile(search_pattern)
    result = [{&amp;#39;string&amp;#39;: link, &amp;#39;spans&amp;#39;: p.search(link).regs[1:]} for link in raw_list if p.match(link)]
    return result


def _calculate_weight_for_match(spans):
    mult = 1
    weight = 0
    for i in reversed(range(len(spans))):
        prev = 0 if i == 0 else spans[i-1][1]
        weight += (spans[i][0] - prev) * mult
        mult *= 2
    return weight


def _sort_result_list(result):
    for r in result:
        r[&amp;#39;weight&amp;#39;] = _calculate_weight_for_match(r[&amp;#39;spans&amp;#39;])
    result = sorted(result, key=lambda k: k[&amp;#39;weight&amp;#39;])
    return result
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;At least that was the case using the regexp engine shipped with Python 3.4 on OSX.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="fuzzy"></category><category term="search"></category><category term="sorting"></category></entry><entry><title>Collect all nouns in hungarian</title><link href="https://tiborsimon.io/blog/python/collect-all-nouns-in-hungarian/" rel="alternate"></link><updated>2015-10-24T00:00:00+02:00</updated><author><name>Tibor Simon</name></author><id>tag:tiborsimon.io,2015-10-24:blog/python/collect-all-nouns-in-hungarian/</id><summary type="html">&lt;p&gt;Hopefully, there is a &lt;a href="https://hu.wiktionary.org/wiki/Kategória:magyar_főnevek" target="_blank"&gt;hungarian wiki dictionary&lt;/a&gt;
that contains all words in hungarian, and it has a noun filter. It can show the nouns breaked.
Instead of manually copying the pages content for the available 200 pages, I fired up my two favorite
python library: &lt;em&gt;BeautifulSoup4&lt;/em&gt; and &lt;em&gt;Requests&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The nouns on the wiki page were arranged into a table, so I had to extract the words from the &lt;code&gt;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&lt;/code&gt;
tags from the html file, downloaded via a web request using the &lt;em&gt;Requests&lt;/em&gt; library and created a soup
from it with &lt;em&gt;BeautifulSoup4&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The whole process was arranged into an infinite while loop. It will run until a valid next page link
 can be found. Not the best solution, but hey, it was just a scipt :) Inside this while loop, there is a
 loop that will collect the words into a list. The delimiter for this inner loop was a common
 word (magyar szótár), that was present on every page after the last listed noun.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="n"&gt;words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;next_link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://hu.wiktionary.org/wiki/Kategória:magyar_főnevek&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;next_link&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;
            &lt;span class="n"&gt;soup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;html.parser&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;extract_words_from_soup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;words.json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;outfile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;outfile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;next_link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://hu.wiktionary.org&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; \
                        &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;következő oldal&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;href&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Word count: {} next_link: {}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;next_link&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Finished with {} words&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;extract_words_from_soup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;li&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;word&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;li&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;magyar szótár&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;magyar főnévi alakok&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;During the process, I printed out every next link the script was found, so I had a feedback where the script
was in the alphabet. As you can see, the last log was an exception printout, indicating that the script could
not parse the next link from the html file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Word count: 200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=adenokarcin%C3%B3ma#mw-pages
Word count: 400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=agr%C3%A1rt%C3%B6rv%C3%A9ny#mw-pages
Word count: 600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=akaszt%C3%B3fahumor#mw-pages
Word count: 800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=alapilletm%C3%A9ny#mw-pages
Word count: 1000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=almaexport#mw-pages
Word count: 1200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=android#mw-pages
Word count: 1400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=anyak%C3%B6nyv#mw-pages
Word count: 1600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=aranymetsz%C3%A9s#mw-pages
Word count: 1800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=assz%C3%B3#mw-pages
Word count: 2000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=aut%C3%B3busz#mw-pages
Word count: 2200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=bakkecske#mw-pages
Word count: 2400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=bark%C3%B3ca#mw-pages
Word count: 2600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=bej%C3%A1r%C3%A1s#mw-pages
Word count: 2800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=beteg+bor#mw-pages
Word count: 3000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=bifsztek#mw-pages
Word count: 3200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=bodob%C3%A1cs#mw-pages
Word count: 3400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=borocska#mw-pages
Word count: 3600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=bujt%C3%A1s#mw-pages
Word count: 3800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=b%C3%A1nyakavics#mw-pages
Word count: 4000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=b%C3%A9ket%C3%B6rekv%C3%A9s#mw-pages
Word count: 4200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=b%C3%B6lcs%C3%A9szdoktor#mw-pages
Word count: 4400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=b%C5%B1v%C3%B6let#mw-pages
Word count: 4600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=ciszterna#mw-pages
Word count: 4800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=csecs#mw-pages
Word count: 5000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=csillagt%C3%A9rk%C3%A9p#mw-pages
Word count: 5200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=csukl%C3%A1s#mw-pages
Word count: 5400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=cukorm%C3%A1z#mw-pages
Word count: 5600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=darukezel%C5%91#mw-pages
Word count: 5800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=dics%C3%A9ret#mw-pages
Word count: 6000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=dodzsem#mw-pages
Word count: 6200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=d%C3%A1rid%C3%B3#mw-pages
Word count: 6400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=efavirenz#mw-pages
Word count: 6600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=elemelked%C3%A9s#mw-pages
Word count: 6800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=eln%C3%B6kl%C3%A9s#mw-pages
Word count: 7000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=el%C5%91v%C3%A1lad%C3%A9k#mw-pages
Word count: 7200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=epicillin#mw-pages
Word count: 7400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=etil%C3%A9n#mw-pages
Word count: 7600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=fakalap%C3%A1cs#mw-pages
Word count: 7800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=fegyverenged%C3%A9ly#mw-pages
Word count: 8000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=felford%C3%ADt%C3%A1s#mw-pages
Word count: 8200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=fenntart%C3%A1s#mw-pages
Word count: 8400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=flam%C3%B3#mw-pages
Word count: 8600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=ford%C3%ADt%C3%B3#mw-pages
Word count: 8800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=fuvaroz%C3%A1s#mw-pages
Word count: 9000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=f%C3%A9rfiszab%C3%B3#mw-pages
Word count: 9200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=f%C3%BCrd%C5%91mester#mw-pages
Word count: 9400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=gabonap%C3%A1linka#mw-pages
Word count: 9600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=gikszer#mw-pages
Word count: 9800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=gusztus#mw-pages
Word count: 10000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=gy%C3%A1szeset#mw-pages
Word count: 10200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=g%C3%A9mkapocs#mw-pages
Word count: 10400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=haditud%C3%B3s%C3%ADt%C3%B3#mw-pages
Word count: 10600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=haj%C3%B3padl%C3%B3#mw-pages
Word count: 10800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=hang#mw-pages
Word count: 11000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=hat%C3%A1reset#mw-pages
Word count: 11200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=herer%C3%A1k#mw-pages
Word count: 11400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=hold%C3%A9v#mw-pages
Word count: 11600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=husztaj#mw-pages
Word count: 11800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=h%C3%ADmz%C5%91n%C5%91#mw-pages
Word count: 12000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=h%C5%B1b%C3%A9ris%C3%A9g#mw-pages
Word count: 12200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=imak%C3%B6nyv#mw-pages
Word count: 12400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=iparcikk#mw-pages
Word count: 12600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=izomr%C3%A1ndul%C3%A1s#mw-pages
Word count: 12800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=juhb%C5%91r#mw-pages
Word count: 13000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=j%C3%BCan#mw-pages
Word count: 13200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=kantni#mw-pages
Word count: 13400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=karrierizmus#mw-pages
Word count: 13600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=kelmefest%C5%91#mw-pages
Word count: 13800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=ker%C3%A9kp%C3%A1rlop%C3%A1s#mw-pages
Word count: 14000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=kimutat%C3%A1s#mw-pages
Word count: 14200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=ki%C3%BAt#mw-pages
Word count: 14400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=kompasz#mw-pages
Word count: 14600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=korm%C3%A1nyker%C3%A9k#mw-pages
Word count: 14800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=kubista#mw-pages
Word count: 15000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=k%C3%A1lyhab%C3%A9l%C3%A9s#mw-pages
Word count: 15200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=k%C3%A9ssz%C3%BAr%C3%A1s#mw-pages
Word count: 15400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=k%C3%B6lts%C3%A9g-el%C5%91ir%C3%A1nyzat#mw-pages
Word count: 15600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=k%C3%B6sz%C3%B6r%C5%B1s#mw-pages
Word count: 15800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=k%C3%BAria#mw-pages
Word count: 16000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=lak%C3%A1s%C3%ADns%C3%A9g#mw-pages
Word count: 16200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=lend%C3%BClet#mw-pages
Word count: 16400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=limlom#mw-pages
Word count: 16600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=l%C3%A1gy#mw-pages
Word count: 16800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=l%C3%A9p%C3%A9s#mw-pages
Word count: 17000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=mad%C3%A1rtej#mw-pages
Word count: 17200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=mangalica#mw-pages
Word count: 17400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=megfigyel%C5%91#mw-pages
Word count: 17600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=mell%C3%A9khere+feje#mw-pages
Word count: 17800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=methemoglobin#mw-pages
Word count: 18000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=mongol#mw-pages
Word count: 18200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=munkanap#mw-pages
Word count: 18400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=m%C3%A1zol%C3%B3#mw-pages
Word count: 18600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=m%C5%B1ipar#mw-pages
Word count: 18800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=napelem#mw-pages
Word count: 19000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=nevel%C5%91n%C5%91#mw-pages
Word count: 19200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=nyirokmirigy#mw-pages
Word count: 19400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=n%C3%A9pbolond%C3%ADt%C3%A1s#mw-pages
Word count: 19600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=okirat-hamis%C3%ADt%C3%A1s#mw-pages
Word count: 19800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=orrnyereg#mw-pages
Word count: 20000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=pajzs#mw-pages
Word count: 20200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=parkol%C3%B3#mw-pages
Word count: 20400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=perzsa#mw-pages
Word count: 20600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=pl%C3%A9b%C3%A1nos#mw-pages
Word count: 20800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=prakker#mw-pages
Word count: 21000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=puncsost%C3%A1l#mw-pages
Word count: 21200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=p%C3%A1rt%C3%A9p%C3%ADt%C3%A9s#mw-pages
Word count: 21400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=rabl%C3%B3barlang#mw-pages
Word count: 21600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=relativit%C3%A1selm%C3%A9let#mw-pages
Word count: 21800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=riad%C3%B3ztat#mw-pages
Word count: 22000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=rudli#mw-pages
Word count: 22200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=r%C3%B3zsabimb%C3%B3#mw-pages
Word count: 22400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=sebhely#mw-pages
Word count: 22600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=skorpi%C3%B3#mw-pages
Word count: 22800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=sporttev%C3%A9kenys%C3%A9g#mw-pages
Word count: 23000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=szaft#mw-pages
Word count: 23200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=szecesszi%C3%B3#mw-pages
Word count: 23400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=szerelmeslev%C3%A9l#mw-pages
Word count: 23600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=sziszt%C3%A9ma#mw-pages
Word count: 23800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=szulf%C3%A1t#mw-pages
Word count: 24000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=sz%C3%A9ler%C5%91ss%C3%A9g#mw-pages
Word count: 24200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=sz%C3%B3kapcsolat#mw-pages
Word count: 24400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=sz%C5%91r#mw-pages
Word count: 24600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=s%C3%B6r%C3%B6z%C5%91#mw-pages
Word count: 24800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=tankhaj%C3%B3#mw-pages
Word count: 25000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=tekn%C5%91sb%C3%A9kap%C3%A1nc%C3%A9l#mw-pages
Word count: 25200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=tervsz%C3%A1m#mw-pages
Word count: 25400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=toj%C3%A1s%C3%A9tel#mw-pages
Word count: 25600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=tudatosul%C3%A1s#mw-pages
Word count: 25800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=t%C3%A1vol%C3%ADt%C3%B3+ideg#mw-pages
Word count: 26000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=t%C3%B6rt%C3%A9n%C3%A9s#mw-pages
Word count: 26200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=t%C5%B1zolt%C3%B3osztag#mw-pages
Word count: 26400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=uzsora#mw-pages
Word count: 26600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=varj%C3%BAleves#mw-pages
Word count: 26800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=veszetts%C3%A9g#mw-pages
Word count: 27000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=vir%C3%A1gcsend%C3%A9let#mw-pages
Word count: 27200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=vulvekt%C3%B3mia#mw-pages
Word count: 27400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=v%C3%A9gagy#mw-pages
Word count: 27600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=v%C3%ADzibetegs%C3%A9g#mw-pages
Word count: 27800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=zajog#mw-pages
Word count: 28000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=zugev%C5%91#mw-pages
Word count: 28200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=%C3%A1gy%C3%BAnasz%C3%A1d#mw-pages
Word count: 28400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=%C3%A1llom%C3%A1s%C3%A9p%C3%BClet#mw-pages
Word count: 28600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=%C3%A1rny%C3%A9kol%C3%A1s#mw-pages
Word count: 28800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=%C3%A1tlageredm%C3%A9ny#mw-pages
Word count: 29000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=%C3%A9letnagys%C3%A1g#mw-pages
Word count: 29200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=%C3%A9rv%C3%A9nyes%C3%ADt%C3%A9s#mw-pages
Word count: 29400 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=%C3%B3rafed%C3%A9l#mw-pages
Word count: 29600 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=%C3%B6r%C3%B6kk%C3%A9val%C3%B3s%C3%A1g#mw-pages
Word count: 29800 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=%C3%BAton%C3%A1ll%C3%B3#mw-pages
Word count: 30000 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=%C3%BCvegpoh%C3%A1r#mw-pages
Word count: 30200 next_link: https://hu.wiktionary.org/w/index.php?title=Kateg%C3%B3ria:magyar_f%C5%91nevek&amp;amp;pagefrom=%C5%91szap%C3%B3#mw-pages

Finished with 30248 words
&lt;/pre&gt;&lt;/div&gt;</summary><category term="web"></category><category term="hack"></category><category term="soup"></category></entry><entry><title>Generating sinusoid signals</title><link href="https://tiborsimon.io/blog/dsp/generating-sinusoid-signals/" rel="alternate"></link><updated>2015-10-17T00:00:00+02:00</updated><author><name>Tibor Simon</name></author><id>tag:tiborsimon.io,2015-10-17:blog/dsp/generating-sinusoid-signals/</id><summary type="html">&lt;h2&gt;The problem&lt;/h2&gt;
&lt;p&gt;The equation of a sinusoid signal is a known fact:&lt;/p&gt;
&lt;p class="equation"&gt;
  $$y(t) = A \sin(2 \pi f t + \varphi) = A \sin(\omega t + \varphi).$$
&lt;/p&gt;

&lt;p&gt;However. This equation is only valid in the &lt;strong&gt;continuous time&lt;/strong&gt; domain, therefore without any modification it is useless in the &lt;strong&gt;discrete time&lt;/strong&gt; domain used by every digital machine. You won't be able to create a continuous variable that spans through the duration of the signal from the beginning to the end while taking up every possible value.&lt;/p&gt;
&lt;p&gt;Machines work with &lt;em&gt;discrete time series&lt;/em&gt; that has a property called &lt;strong&gt;resolution&lt;/strong&gt;. Resolution is the link between &lt;em&gt;continous&lt;/em&gt; and &lt;em&gt;discrete&lt;/em&gt; time domain. This property is implemented with &lt;strong&gt;sampling&lt;/strong&gt;. It tells us how many data points were sampled equidistantly from the continuous signal within a time segment. In this way we can represent a continuous signal with discrete data points&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Therefore the &lt;em&gt;t&lt;/em&gt; variable in the equation can be represented as a vector of data points. To create such a time vector, you have to choose a sampling interval.&lt;/p&gt;
&lt;p&gt;Let's say you want to get &lt;strong&gt;10 samples per seconds&lt;/strong&gt; &lt;em&gt;(fs=10Hz)&lt;/em&gt;, and you want to have &lt;strong&gt;20 samples&lt;/strong&gt; in your vector. That also means that your time vector will cover almost &lt;strong&gt;2 seconds&lt;/strong&gt;&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; of continuous time.&lt;/p&gt;
&lt;p&gt;You can test that the &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt; vector are exactly the same. Both vector starts from zero and ends at 1.9. Having the time vector we can generate a sinusoid signal with a frequency of 1Hz. This will result 2 periods in the signal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;s = sin(2*pi*1*t1);
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If we plot the generated signal, we can see, that it is not a sine signal at all. It is a discrete signal, that has values in discrete points as we expected.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/articles/smart-sinusoids/signal001.png" alt="Discrete vs continous time sine signal" /&gt;&lt;/p&gt;
&lt;p&gt;This method is one of the 4 main signal generation methods where we link the discrete time signal to the continuous time. Having such a connection between the two domain, the signal can be played back with the computer's &lt;em&gt;digital to analog converter&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;However. There are other use cases when we don't want to link the &lt;strong&gt;discrete time&lt;/strong&gt; to the &lt;strong&gt;continuous time&lt;/strong&gt;, so we don't have to bother with the sampling frequency, and we can generate a time vector from 0 to 1, and pass it to the equation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;t = linspace(0,1,100);
s = sin(2*pi*3*t);
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The result will be a 100 sample long sinusoid signal, that contains 3 periods. But be careful. This signal can't be used as the previous one until we specify the sampling frequency.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/articles/smart-sinusoids/signal002.png" alt="100 samples long sinusoid without discrete/continous time lock" /&gt;&lt;/p&gt;
&lt;p&gt;As you can see, generating sinusoids with these basic methods isn't hard at all. But you &lt;strong&gt;have to think&lt;/strong&gt; about the method, the formulas and the units. This could be a bit time consuming if you have to think about it every time you want to generate a signal..&lt;/p&gt;
&lt;h2&gt;Sinusoid signal parameters&lt;/h2&gt;
&lt;p&gt;There are 9 parameters that a pure sinusoid signal could have. In order to be able to generate any kind of sinusoid signals, you should be familiar with the parameters.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/articles/smart-sinusoids/detailed.png" alt="Sinusoid signal parameters" /&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Parameter name&lt;/th&gt;
&lt;th align="left"&gt;Unit&lt;/th&gt;
&lt;th align="left"&gt;Possible parameters&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;phi&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[degree]&lt;/td&gt;
&lt;td align="left"&gt;phase&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;A&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[full scale]&lt;/td&gt;
&lt;td align="left"&gt;amplitude&lt;sup id="fnref:3"&gt;&lt;a class="footnote-ref" href="#fn:3" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;f&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[Hz]&lt;/td&gt;
&lt;td align="left"&gt;frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;fs&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[Hz]&lt;/td&gt;
&lt;td align="left"&gt;sample rate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;T&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[s]&lt;/td&gt;
&lt;td align="left"&gt;period&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;dt&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[s]&lt;/td&gt;
&lt;td align="left"&gt;sample time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;L&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[s]&lt;/td&gt;
&lt;td align="left"&gt;signal duration&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;N&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[-]&lt;/td&gt;
&lt;td align="left"&gt;number of periods&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;n&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[-]&lt;/td&gt;
&lt;td align="left"&gt;number of samples&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;With these parameters there are 5 main generation methods for sinusoid signals. Each of them have alternatives that doesn't count as an individual generation method due to the used parameters can be derived from the others if you apply the following formulas: &lt;em&gt;fs = 1/dt&lt;/em&gt;, &lt;em&gt;T = 1/f&lt;/em&gt; and &lt;em&gt;L=n*dt&lt;/em&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Method index&lt;/th&gt;
&lt;th align="left"&gt;Required parameters&lt;/th&gt;
&lt;th align="left"&gt;CT DT lock&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;1&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;n&lt;/code&gt; &lt;code&gt;N&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;No&lt;/td&gt;
&lt;td align="left"&gt;a signal consisting of &lt;code&gt;n&lt;/code&gt; data points with &lt;code&gt;N&lt;/code&gt;&lt;br&gt; periods in it&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;2&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;L&lt;/code&gt; &lt;code&gt;N&lt;/code&gt; &lt;code&gt;fs&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Yes&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;L&lt;/code&gt; seconds long signal sampled at &lt;code&gt;fs&lt;/code&gt; consisting of &lt;br&gt;&lt;code&gt;N&lt;/code&gt; periods in it&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;3&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;f&lt;/code&gt; &lt;code&gt;N&lt;/code&gt; &lt;code&gt;fs&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Yes&lt;/td&gt;
&lt;td align="left"&gt;a signal sampled at &lt;code&gt;fs&lt;/code&gt; sampling rate with &lt;code&gt;N&lt;/code&gt; &lt;br&gt;periods in it with the frequency &lt;code&gt;f&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;4&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;f&lt;/code&gt; &lt;code&gt;n&lt;/code&gt; &lt;code&gt;fs&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Yes&lt;/td&gt;
&lt;td align="left"&gt;a signal consisting of &lt;code&gt;n&lt;/code&gt; &lt;br&gt;data points sampled at &lt;code&gt;fs&lt;/code&gt; sampling rate with the frequency &lt;code&gt;f&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;5&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;f&lt;/code&gt; &lt;code&gt;L&lt;/code&gt; &lt;code&gt;fs&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Yes&lt;/td&gt;
&lt;td align="left"&gt;a signal sampled at &lt;code&gt;fs&lt;/code&gt; sampling rate with the &lt;br&gt;duration of &lt;code&gt;L&lt;/code&gt; seconds with the frequency &lt;code&gt;f&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Let's try out all methods, to see how you can use them in practice. Let's generate the same 60 samples of sinusoid signal with 2.5 periods in it with the amplitude 1 at an arbitrary sampling frequency:&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/articles/smart-sinusoids/demo_signal.png" alt="Reference signal for all the following generation methods" /&gt;&lt;/p&gt;
&lt;p&gt;The used parameters may seem a bit odd for the first time, but due to the constraint of generating the same signal with all the methods, they will be reasonable.&lt;/p&gt;
&lt;h3&gt;Method 1 - [n,N]&lt;/h3&gt;
&lt;p&gt;Generating a sinusoid signal with &lt;code&gt;n&lt;/code&gt; data points with &lt;code&gt;N&lt;/code&gt; periods in it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;60&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;N&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="nc"&gt;.5&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nt"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="nd"&gt;:n-1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;k&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;n&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;sin&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;N&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;k&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="nt"&gt;stem&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;s&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Method 2 - [L,N,fs]&lt;/h3&gt;
&lt;p&gt;Generating &lt;code&gt;L&lt;/code&gt; seconds long signal sampled at &lt;code&gt;fs&lt;/code&gt; consisting of &lt;code&gt;N&lt;/code&gt; periods in it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;N&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="nc"&gt;.5&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;60&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nt"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;fs&lt;/span&gt;&lt;span class="nd"&gt;:L-1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;k&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;L&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;sin&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;N&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;k&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="nt"&gt;stem&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;s&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Method 3 - [f,N,fs]&lt;/h3&gt;
&lt;p&gt;Generating a sinusoid signal sampled at &lt;code&gt;fs&lt;/code&gt; sampling rate with &lt;code&gt;N&lt;/code&gt; periods in it with the frequency &lt;code&gt;f&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;N&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="nc"&gt;.5&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;N&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;60&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nt"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;:(&lt;/span&gt;&lt;span class="nt"&gt;N&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;f&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nt"&gt;-1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;sin&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;f&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;k&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="nt"&gt;stem&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;s&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Method 4 - [n,f,fs]&lt;/h3&gt;
&lt;p&gt;Generating a signal consisting of &lt;code&gt;n&lt;/code&gt; data points sampled at &lt;code&gt;fs&lt;/code&gt; sampling rate with the frequency &lt;code&gt;f&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;60&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="nc"&gt;.5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;n&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nt"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="nd"&gt;:n-1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;k&lt;/span&gt;&lt;span class="o"&gt;*(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="nt"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;sin&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;f&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;k&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="nt"&gt;stem&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;s&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Method 5 - [f,L,fs]&lt;/h3&gt;
&lt;p&gt;Generating a sinusoid signal sampled at &lt;code&gt;fs&lt;/code&gt; sampling rate with the duration of &lt;code&gt;L&lt;/code&gt; seconds with the frequency &lt;code&gt;f&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;60&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="nc"&gt;.5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;L&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nt"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;fs&lt;/span&gt;&lt;span class="nd"&gt;:L-1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;sin&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;f&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;n&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="nt"&gt;stem&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;s&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;That's it. These 5 methods cover all the possible non redundant ways to generate sinusoidal signals. Did you understand them? Did you like them? Will you use them? Will you &lt;em&gt;study&lt;/em&gt; them? Will you &lt;em&gt;derive&lt;/em&gt; them over and over again?&lt;/p&gt;
&lt;p&gt;If your answers for the last two questions were both &lt;em&gt;nope&lt;/em&gt;, then the go ahead and meet &lt;b&gt;&lt;a href="http://tiborsimon.io/projects/#TSPR0003"&gt;Smart Sinusoids&lt;/a&gt;&lt;/b&gt;.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Of course this is a very high level overview of the &lt;a href="http://en.wikipedia.org/wiki/Nyquist-Shannon_sampling_theorem"&gt;sampling theorem&lt;/a&gt;. There are much more detail how these things really work.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;Because we have started our time vector from 0 as the first vector point, the remained 19 points wont cover all the 2 seconds time duration but will span until 1.9 seconds &lt;em&gt;(2s - 1/fs = 1.9s)&lt;/em&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:3"&gt;
&lt;p&gt;PC sound cards usually accept signals scaled -1 to 1.&amp;#160;&lt;a class="footnote-backref" href="#fnref:3" rev="footnote" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="signals"></category><category term="basics"></category></entry><entry><title>BusPirate setup for OSX</title><link href="https://tiborsimon.io/blog/tools/buspirate-setup-for-osx/" rel="alternate"></link><updated>2015-09-13T00:00:00+02:00</updated><author><name>Tibor Simon</name></author><id>tag:tiborsimon.io,2015-09-13:blog/tools/buspirate-setup-for-osx/</id><summary type="html">&lt;p&gt;On my windows machine I used &lt;strong&gt;Putty&lt;/strong&gt;
for this purpose. In mac there is &lt;strong&gt;Zterm&lt;/strong&gt; as an alternative, but I wanted to
use the terminal. &lt;strong&gt;Screen&lt;/strong&gt; is the perfect alternative for this job. The
workflow is the following:&lt;/p&gt;
&lt;h3&gt;1. Find out the serial number of your BusPirate&lt;/h3&gt;
&lt;p&gt;To be able to communicate your BusPirate you have to know it's serial number.
List the connected devices before you connect your Buspirate with the following
command: &lt;code&gt;$ ls /dev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This command will list all the connected devices. Save them somewhere, and then
connect your BusPirate and list the devices again. Find the one that is only
present when you connect your BusPirate to your machine.&lt;/p&gt;
&lt;p&gt;There you go, mine was: &lt;code&gt;tty.usbserial-AD01W63E&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;2. Connect to your device&lt;/h3&gt;
&lt;p&gt;Use &lt;strong&gt;screen&lt;/strong&gt; to connect to your BusPirate:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ screen /dev/tty.usbserial-AD01W63E 115200 8N1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The BusPirate console should appear on your terminal. To exit the session press
&lt;kbd&gt;control&lt;/kbd&gt;+&lt;kbd&gt;a&lt;/kbd&gt; then &lt;kbd&gt;k&lt;/kbd&gt; and after the prompt press
&lt;kbd&gt;y&lt;/kbd&gt; to kill the screen.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Screen&lt;/strong&gt; could be weird at first, but there are tons of shortcuts that will
help you. &lt;a href="http://ss64.com/osx/screen.html"&gt;Screen manual for osx&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;3. Make your life easier&lt;/h3&gt;
&lt;p&gt;Create an alias for the connection by writing into your &lt;em&gt;~/.bash_profile&lt;/em&gt;
file.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alias buspirate='screen /dev/tty.usbserial-AD01W63E 115200 8N1'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Source the modified file or restart the terminal, and type in &lt;code&gt;buspirate&lt;/code&gt;, and
the BusPirate terminal should open.&lt;/p&gt;</summary><category term="tools"></category><category term="embedded"></category><category term="device"></category></entry><entry><title>Redirect external links to new tab</title><link href="https://tiborsimon.io/blog/web/redirect-external-links-to-new-tab/" rel="alternate"></link><updated>2015-05-17T00:00:00+02:00</updated><author><name>Tibor Simon</name></author><id>tag:tiborsimon.io,2015-05-17:blog/web/redirect-external-links-to-new-tab/</id><summary type="html">&lt;p&gt;Hopefully, there is a simple javascript hack, that can redirect your external
links to a new blank tab.&lt;/p&gt;
&lt;p&gt;All the credits go to &lt;a href="http://stackoverflow.com/users/1504966/austin"&gt;Austin&lt;/a&gt;
and to his &lt;a href="http://stackoverflow.com/a/11597448"&gt;stackoverflow post&lt;/a&gt;. I am just
a happy user of this method :)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;each&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;RegExp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
           &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stopPropagation&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
           &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;_blank&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="p"&gt;});&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The method just works. Nothing fancy about it, it does what is supposed to do.
Thank you Austin!&lt;/p&gt;</summary><category term="pelican"></category><category term="hack"></category><category term="javascript"></category></entry><entry><title>Java Shooter Game</title><link href="https://tiborsimon.io/blog/programming/java-shooter-game/" rel="alternate"></link><updated>2015-01-17T00:00:00+01:00</updated><author><name>Tibor Simon</name></author><id>tag:tiborsimon.io,2015-01-17:blog/programming/java-shooter-game/</id><summary type="html">&lt;iframe class="video" width="640" height="360" src="https://www.youtube.com/embed/dUKqIYJZlOk" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;It uses some open source stuff, like the explosion animation and the music for the promo video. The game is open source, so you can go to GitHub to see how the game functionalities were implemented.&lt;/p&gt;
&lt;p&gt;If the game won’t open by clicking on it (like on OSX Moutain Lion), you have to open it from command line. If the command line returns an error like pixel format not accelerated, you should check out these sites for the solution.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;path to the the jar file&amp;gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;java -jar JavaShooter.jar
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Main menu&lt;/h1&gt;
&lt;p&gt;In the Main Menu you have 4 options but in reality 3 of them is working right now.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Play – it goes t the new game menu&lt;/li&gt;
&lt;li&gt;Player – it goes to the player menu&lt;/li&gt;
&lt;li&gt;Scores – currently not working&lt;/li&gt;
&lt;li&gt;Exit – it exits the game&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="/images/articles/java-shooter/javashooter-1.png" alt="Java Shooter Game: main menu" width="550" /&gt;&lt;/p&gt;
&lt;h1&gt;Game menu&lt;/h1&gt;
&lt;p&gt;In the New Game Menu you can start Easy, Normal and Expert game.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Easy – slow enemies with slow spawning time + auto aiming&lt;/li&gt;
&lt;li&gt;Normal – faster enemies with faster spawning time + auto aiming&lt;/li&gt;
&lt;li&gt;Expert – slow enemies with slow spawning time + manual aiming (very hard!)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="/images/articles/java-shooter/javashooter-2.png" alt="Java Shooter Game: game menu" width="550" /&gt;&lt;/p&gt;
&lt;h1&gt;Player menu&lt;/h1&gt;
&lt;p&gt;In the Player Menu you can view the stats of the current player, export your player data, and create new player.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Export – it exports the current player stats to transfer them another computer.&lt;/li&gt;
&lt;li&gt;New – it goes to the New Player Menu&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="/images/articles/java-shooter/javashooter-3.png" alt="Java Shooter Game: player menu" width="550" /&gt;&lt;/p&gt;
&lt;h1&gt;Controlling the game&lt;/h1&gt;
&lt;p&gt;The game follows the conventions: you can move with the arrow keys, and fire with the &lt;code&gt;space bar&lt;/code&gt;. In &lt;em&gt;Easy&lt;/em&gt; and &lt;em&gt;Normal&lt;/em&gt; mode the game aims for you, but in &lt;em&gt;Expert&lt;/em&gt; mode aiming is your task with &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;H&lt;/code&gt; keys.&lt;/p&gt;
&lt;p&gt;During the game the mouse pointer disappears (in mac you have to move the pointer a bit unless it won’t disappear). With the &lt;code&gt;ESC&lt;/code&gt; key you can bring up the Pause Menu, and the mouse pointer will show up again.&lt;/p&gt;
&lt;h1&gt;Modding the gameplay&lt;/h1&gt;
&lt;p&gt;I have built in the possibility to mack around with the main game parameters. To do this you have to create a text file called mods_for_the_game.txt into the same folder where the jar file located.&lt;/p&gt;
&lt;h2&gt;Hackable parameters&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Property name&lt;/th&gt;
&lt;th align="left"&gt;Unit&lt;/th&gt;
&lt;th align="left"&gt;Default value&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;fullscreen&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[true/false]&lt;/td&gt;
&lt;td align="left"&gt;false&lt;/td&gt;
&lt;td align="left"&gt;the game can load in window or full screen mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;overclock&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[fps in int]&lt;/td&gt;
&lt;td align="left"&gt;60&lt;/td&gt;
&lt;td align="left"&gt;sets the target fps. The actual fps is dependent on your machine&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;showFPS&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[true/false]&lt;/td&gt;
&lt;td align="left"&gt;false&lt;/td&gt;
&lt;td align="left"&gt;turns the fps counter on or off&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;explosionPoolLimit&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[pool limit in int]&lt;/td&gt;
&lt;td align="left"&gt;10&lt;/td&gt;
&lt;td align="left"&gt;it is expensive to allocate many animation frames in real time, therefore the game allocates the explosion animation frames before the game starts. You can set the max number of animations preloaded to the animation pool. For high FPS rate it is recommended to set this value greater than 10. The game will load slower but it wont crash due to empty animation pool&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;sparkPoolLimit&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;[pool limit in int]&lt;/td&gt;
&lt;td align="left"&gt;10&lt;/td&gt;
&lt;td align="left"&gt;same as the explosionPoolLimit parameter. If you set high FPS rate set this value higher than 10&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The syntax is very simple. First you type the keyword you want to modify (not case sensitive), space, then the value. This is a modifying block. You can use more blocks at once separated them with spaces. The default settings are the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;fullscreen false overclock 60 showfPS false explosionpoollimit 10 sparkpoollimit 10
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;If the game crashes, make sure you set the pool limits higher than 10!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For example lets say you want to set higher FPS rate than the default 60 fps, and you want to play the game in full window mode with the FPS counter displayed. You have to create the mods_for_the_game.txt file next to the jar file.
The content of the text file in this case should be like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;overclock 75 fullscreen true showfPS true
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Example video about how to overclock the game a bit.&lt;/p&gt;
&lt;iframe class="video" width="640" height="360" src="https://www.youtube.com/embed/L5NhA_ajQ_w" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;Summary&lt;/h1&gt;
&lt;p&gt;The developed program isn't a full featured game but a skeleton, which you can develop further.&lt;/p&gt;</summary><category term="java"></category><category term="game"></category></entry><entry><title>SlotCar Race</title><link href="https://tiborsimon.io/blog/embedded/slotcar-race/" rel="alternate"></link><updated>2015-01-15T00:00:00+01:00</updated><author><name>Tibor Simon</name></author><id>tag:tiborsimon.io,2015-01-15:blog/embedded/slotcar-race/</id><summary type="html">&lt;p&gt;The only information we had was the acceleration data comes from the car itself. Based on this information we had to control the voltage of the car’s motor to run the fastest lap on the track. It doesn’t sounds too hard, does it.&lt;/p&gt;
&lt;div class="gallery"&gt;
    &lt;img class="jslghtbx-thmb" src="/images/articles/slotcar/promo1.jpg" alt="Small slot car that has to be driven autonomously." data-jslghtbx data-jslghtbx-caption="The slot car we have to program." data-jslghtbx-group="slotcar-group-1" /&gt;
    &lt;img class="jslghtbx-thmb" src="/images/articles/slotcar/promo2.jpg" alt="The track the slot car has to run." data-jslghtbx data-jslghtbx-caption="The track the slot car has to run." data-jslghtbx-group="slotcar-group-1" /&gt;
&lt;/div&gt;

&lt;h1&gt;About the competition&lt;/h1&gt;
&lt;p&gt;However. The acceleration data was very noisy, it needed a strong filtering, therefore it had serious amount of delay. We had to cope with this delay and we had to run the fastest lap among the other teams who participated this challenge without sliding off the track.&lt;/p&gt;
&lt;p&gt;The rules of the competition&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Run the fastest 5 lap without sliding off the track.&lt;/li&gt;
&lt;li&gt;No physical modification were allowed.&lt;/li&gt;
&lt;li&gt;You have 3 attempts.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;The track&lt;/h1&gt;
&lt;p&gt;The track was a casual slot car track with two corners and a cross over section. The power for the car comes from the two pair of rails. There is a room for two cars on the track at once.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src="/images/articles/slotcar/track.jpg" width="400" alt="The track."&gt;
&lt;/figure&gt;

&lt;h1&gt;The car&lt;/h1&gt;
&lt;p&gt;Audi R8 body with an embedded Freescale processor in it. In between the front wheels there is a guider with the brushes to collect the electricity from the rails. There are two IO interface on the car: the mini USB connector for programming and a mini SD card slot to get the accelerometer data for developing. One car had a led on the top of it that we could use for debugging the algorithm.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src="/images/articles/slotcar/car.jpg" width="400" alt="The slot car."&gt;
&lt;/figure&gt;

&lt;h1&gt;Solving the problem&lt;/h1&gt;
&lt;p&gt;There is a trivial solution for the problem: drive fast in the straight parts, brake before the corners, drive slow in the corners.
But there are a few questions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What is the maximum speed the car can keep without sliding off the track.&lt;/li&gt;
&lt;li&gt;How do you know where are you on the track?&lt;/li&gt;
&lt;li&gt;How do you compensate the delay of the digital filter.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The first question was a simple one. We slowly increased the motor voltage and run a few laps until the car slid off. But there was a small problem. Not all cars behaved exactly the same. Some cars slid off at the given motor voltage value, some cars didn’t. We had to take account of this behavior.
The second question was a tougher one. The car only knew the acceleration data measured by itself. These data could be saved on a memory card during the runs, so we could analyse them offline.&lt;/p&gt;
&lt;p&gt;You can see the data coming from the car when it run 4 loops on the track on the picture down below. As you can see the only usable information comes from the X acceleration data. After the car speeds up, there is a nice periodic signal. Our main task was: find the period of the signal, so we could figure out where we are on the track. When we have the information about where we are, we can create an algorithm that drives the car faster on the straight lines, and slower in the corners. The period finder algorithm had to be prepared to find the period regardless of the starting position of the car.&lt;/p&gt;
&lt;p&gt;The third question was easier after the second one. We knew that the acceleration data had a delay in it. We had the knowledge about where we are on the track with a delay. So instead we make our decisions about braking or accelerating after we reached a straight line or a corner, we make a prediction before.&lt;/p&gt;
&lt;p&gt;Let’s see how the car performs with the final algorithm before we dive into the details.&lt;/p&gt;
&lt;iframe class="video" width="640" height="360" src="https://www.youtube.com/embed/Aj9IzfBdFBo" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;What is happening on the video?&lt;/h1&gt;
&lt;p&gt;You will learn later from the source code listed below, that the whole program stands from three main states:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Normalization state – we are waiting the car to speed up to the maximum safe speed, and to run in a straight section of the road.&lt;/li&gt;
&lt;li&gt;Period finder state – the car runs at least two lap before it has enough information to run the period finder algorithm.&lt;/li&gt;
&lt;li&gt;Final state – the car accelerate and deccelerate according the information gathered in state 2.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s see how this happened on the video.&lt;/p&gt;
&lt;p&gt;The car was put down on the track. It accelerated to the maximum safe speed. It reached this speed a bit before the first corner, so it was on a straight section when the acceleration finished, therefore it entered state two, which is the period finder algorithm. The small blue led on the top of the car flashed when the car’s state changed, but the led flashed in the middle of the corner because the delay of the acceleration filtering.
In state two the car run at least two full lap (because it collects at least two of every kind of event), collected informations, and after the second lap, when there was enough information, the period finder algorithm kicked in, and successfully found the period of the track.
Right at this moment, the car was switched to state three, in which the algorithm takes care of the car’s speed according to the information collected in state two. The led blinked in every lap.&lt;/p&gt;
&lt;h1&gt;Period finder algorithm&lt;/h1&gt;
&lt;figure&gt;
    &lt;img src="/images/articles/slotcar/raw-data.png" width="550" alt="Raw accelerometer data"&gt;
    &lt;figcaption&gt;Raw accelerometer data&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The period finder algorithm is a very simple thus a very specific algorithm that was developed only for this competition. It may work in other situations, but don’t bet your money there :)&lt;/p&gt;
&lt;figure&gt;
    &lt;img src="/images/articles/slotcar/algorithm.png" width="550" alt="lgorithm output signals"&gt;
    &lt;figcaption&gt;Algorithm output signals&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;As you can see, the final output of the algorithm was shown above.&lt;/p&gt;
&lt;p&gt;Below you can find the repository for the nicely commented source code of the period finder algorithm. The final code that runs on the car itself is not showed, it is up to you to implement it in the target platform.&lt;/p&gt;
&lt;h1&gt;Summary&lt;/h1&gt;
&lt;p&gt;With this algoritm you will be able to have a strong foundtation for your own algorithm if you are faceing a similar contest. Feel free to contribute to the algorithm, to make it more durable.&lt;/p&gt;</summary><category term="embedded"></category><category term="dsp"></category><category term="accelerometer"></category></entry></feed>